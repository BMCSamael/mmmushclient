<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, September 30, 2014, 5:33 AM -->
<!-- MuClient version 4.94 -->

<!-- Plugin "exits_n_mobs_mini" generated by Plugin Wizard -->

<muclient>

<plugin
   name="exits_n_mobs_mini"
   author="Ruthgul"
   id="78c38a09ed49fe8a8e03ec6a"
   language="Lua"
   purpose="Visible exits and mobs in a miniwindow"
   save_state="y"
   date_written="2014-09-30 05:31:59"
   date_modified="2014-09-30 07:31:07"
   requires="4.73"
   version="1.0"
   >

<description trim="y">

<![CDATA[

.---------------------.
 | exits_n_mobs_mini |
`---------------------'

Shows visible exits and mobs in the room, in a miniwindow.

(It doesn't auto-update. Use 'look' to re-capture the data.)


** REQUIRES **

- Game settings: SHOW-EXITS must be ON, to capture visible exits.  [ Type: set show-exits on ]
- MXP must be ON, to capture visible mobs in the room  [ Client setting: Game, Configure, MXP / Pueblo... > Use MXP / Pueblo: On command (or Yes - always). ]
- The file generic_miniwindow.lua must be placed in the MUSHclient/lua directory.
- MUSHclient must have write access to its folder.


Syntax:

* exits mini [on|off]  - shows/hides the stats miniwindow (ON by default)

* show exits [on|off]  - toggles showing exits on/off (ON by default)
* show mobs [on|off]  - toggles showing mobs on/off (ON by default)


Author: Ruthgul
Miniwindow code adapted from Fiendish's / Enelya's chat capture plugins

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Aliases  -->

<aliases>

  <alias
   match="^exits mini(| (?P&lt;state&gt;on|off))$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_visible("%&lt;state&gt;")
</send>
  </alias>


  <alias
    enabled="y"
    match="^show[ ]+exits(|[ ]+(?P&lt;status&gt;(on|off)))$"
    regexp="y"
    send_to="12"
    sequence="100"
  >
  <send>toggle_exits("%&lt;status&gt;")
</send>
  </alias>

  <alias
    enabled="y"
    match="^show[ ]+mobs(|[ ]+(?P&lt;status&gt;(on|off)))$"
    regexp="y"
    send_to="12"
    sequence="100"
  >
  <send>toggle_mobs("%&lt;status&gt;")
</send>
  </alias>


<!--  Plugin help  -->

  <alias
   enabled="y"
   match="^exits\_n\_mobs(|\_mini)(|( |\:)help)$"
   regexp="y"
   script="OnHelp"
  >
  </alias>

</aliases>



<!--  Triggers  -->

<triggers>

<!-- on visible exits -->

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^  Visible Exits\: (.+)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>exits = "%1"
</send>
  </trigger>


<!-- on prompt -->

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|[^ ]+(.*?))(\&lt;(.+)hp (.+)sp (.+)st\&gt;|\(.+\)|\&gt;) $"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>exits_redraw()
</send>
  </trigger>

</triggers>



<!--  Scripts  -->

<script>

<![CDATA[

require "generic_miniwindow"
require "wait"


-----------------
-- plugin stuff
-----------------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID(), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID(), 1) .. " help")
  Note(" to see info about this plugin --")

  load_config()
  init_data()

  exits_start()
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID(), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo(GetPluginID(), 14)) .. ")")
end


function OnPluginEnable()
  if (show_mini) then
    mini_show()
  end
end


function OnPluginClose()
  if (show_mini) then
    if GetPluginInfo(GetPluginID(), 17) then -- plugin is enabled
      mini_hide()
    end
  end
end


function OnPluginDisable()
  if (show_mini) then
    mini_hide()
  end
end


function OnPluginSaveState()
  if (show_mini) then
    SetVariable("enabled", tostring(GetPluginInfo(GetPluginID(), 17)))
    save_status()
  end
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/exits_n_mobs_mini.xml",
  }
  return (table.concat(t, ";"))
end


function plugin_update_aux_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/generic_miniwindow.lua,MUSH/lua",
  }
  return (table.concat(t, ";"))
end



------------------------
-- config & init stuff
------------------------

function load_config()
  show_mini = ((GetVariable("show_mini") or "true") == "true")

  show_exits = ((GetVariable("show_exits") or "true") == "true")
  show_mobs = ((GetVariable("show_mobs") or "true") == "true")
end


function save_config()
  SetVariable("show_mini", tostring(show_mini))

  SetVariable("show_exits", tostring(show_exits))
  SetVariable("show_mobs", tostring(show_mobs))

  SaveState()
end


function init_data()
  exits = nil
  tmobs = nil
end



------------
-- toggles
------------

function toggle_visible(status)
  show_mini = do_toggle(show_mini, status)

  save_config()

  if (show_mini) then
    mini_show()
  else
    mini_hide()
  end
end


function toggle_exits(status)
  show_exits = do_toggle(show_exits, status)

  save_config()

  if (show_exits) then
    Note("-- exits_n_mobs_mini: show_exits mode ON --")
  else
    Note("-- exits_n_mobs_mini: show_exits mode OFF --")
  end
end


function toggle_mobs(status)
  show_mobs = do_toggle(show_mobs, status)

  save_config()

  if (show_mobs) then
    Note("-- exits_n_mobs_mini: show_mobs mode ON --")
  else
    Note("-- exits_n_mobs_mini: show_mobs mode OFF --")
  end
end


function do_toggle(var, status)
  if (status == "on") then
    var = true
  elseif (status == "off") then
    var = false
  else
    var = not var
  end

  return var
end



--------
-- MXP
--------

function OnPluginMXPopenTag(name, args, mylist)
  if (not tmobs) then
    tmobs = {}
  end

  local short

  if (string.find(name, "pers") == 1) then        -- NPC or player
    short, _ = string.match(name, 'pers, name="(.-)" desc="(.-)"')

    tmobs[short] = (tmobs[short] or 0) + 1
  end
end



---------------------
-- miniwindow stuff
---------------------

function exits_start()
  do_install_miniwindow("exits n mobs", show_mini, false)
end


function exits_redraw()
  if (show_mini)
  and ((exits) or (tmobs and (#tmobs > 0))) then
    clear_mini()
    do_show_exits_n_mobs()
    init_data()
  end
end


function do_show_exits_n_mobs()
  if (show_exits) and (exits) then
    add_to_mini("cyan", "black", "Exits: ")
    add_to_mini("yellow", "black", exits)
    add_to_mini("silver", "black", "\r\n")
    add_to_mini("silver", "black", "\r\n")
  end

  if (show_mobs) and (tmobs) then
    add_to_mini("cyan", "black", "Mobs: ")
    add_to_mini("silver", "black", "\r\n")

    -- sort them alphabetically
    local tsmobs = {}
    for name, _ in pairs(tmobs) do
      tsmobs[#tsmobs + 1] = name
    end
    table.sort(tsmobs)

    -- show them
    local name
    for i = 1, #tsmobs do
      name = tsmobs[i]
      if (tmobs[name] > 1) then
        add_to_mini("silver", "black", "(" .. string.format("%3s", tmobs[name]) .. ") ")
      else
        add_to_mini("silver", "black", string.rep(" ", 6))
      end
      add_to_mini("lime", "black", name)
      add_to_mini("silver", "black", "\r\n")
    end
    add_to_mini("silver", "black", "\r\n")
  end
end


function add_to_mini(fgcol, bgcol, txt)
  if (show_mini) then
    if (not styles) then
      styles = {}
    end

    if (txt == "\r\n") then
      log_to_mini("", "", "", styles)
      styles = {}

    else
      styles[#styles + 1] = {
        text = txt,
        textcolour = ColourNameToRGB(fgcol),
        backcolour = ColourNameToRGB(bgcol),
        length = string.len(txt),
        style = 0,
      }
    end
  end
end


]]>

</script>

</muclient>
