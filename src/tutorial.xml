<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, December 20, 2013, 9:17 AM -->
<!-- MuClient version 4.91 -->

<!-- Plugin "tutorial" generated by Plugin Wizard -->

<muclient>

<plugin
   name="tutorial"
   author="Ruthgul"
   id="8e6a05d3e8bbd72d1f6a7ae8"
   language="Lua"
   purpose="a set of lessons for the Materia Magica MUSHclient bundle"
   date_written="2013-12-20 09:15:50"
   date_modified="2016-12-22 06:03:10"
   requires="4.71"
   version="1.0"
   >

<description trim="y">

<![CDATA[


.------------.
 | lesson |
`------------'


A series of 1-page lessons to show the basic operation of the MUSHclient bundle for Materia Magica.


Syntax:

* lesson


Author: Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Aliases  -->

<aliases>

  <alias
   match="^lesson$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>show_a_page(pages["toc"])
</send>
  </alias>

  <alias
   match="^lesson[ ]+(?P&lt;num&gt;[0-9]+)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>show_a_page(pages["p%&lt;num&gt;"])
</send>
  </alias>


<!--  Plugin help  -->

  <alias
   enabled="y"
   match="^lesson( |\:)help$"
   regexp="y"
   script="OnHelp"
  >
  </alias>

</aliases>



<!--  Scripts  -->


<script>

<![CDATA[

-----------------
-- plugin stuff
-----------------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID(), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID(), 1) .. " help")
  Note(" to see info about this plugin --")
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID(), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo(GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/tutorial.xml",
  }
  return (table.concat(t, ";"))
end


function plugin_update_aux_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/res/mm_boil.mp3,MUSH/sounds/msp",
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/res/mm_stream.mp3,MUSH/sounds/msp",
  }
  return (table.concat(t, ";"))
end



-------------------
-- lesson pages
-------------------

pages = {
  ["toc"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, ToC |D~
|w
|D* |Wlesson 0   |w-  Overview
|D* |Wlesson 1   |w-  Configuration, MSP
|D* |Wlesson 2   |w-  Captures, Repeat command
|D* |Wlesson 3   |w-  Maps
|D* |Wlesson 4   |w-  Speedwalks
|D* |Wlesson 5   |w-  The area Mapper
|D* |Wlesson 6   |w-  The area Mapper (cont.)
|D* |Wlesson 7   |w-  Aliases
|D* |Wlesson 8   |w-  Aliases (examples)
|D* |Wlesson 9   |w-  Triggers
|D* |Wlesson 10  |w-  Example: making a highlight trigger
|D* |Wlesson 11  |w-  Example: making a trigger to gag stuff from screen
|D* |Wlesson 12  |w-  Command Stacking, The Commands Sequencer
|D* |Wlesson 13  |w-  Making aliases that work with and without a target
|D* |Wlesson 14  |w-  Pre-installed stuff
|w
]],

  ["p0"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p0 |D~
|w
|D[ |WOverview |D]
|w
This is a copy of |WMUSHclient v4.9x|w, customized to play |WMateria Magica|w.  It's meant for new players, and / or people migrating from other clients.
|w
The bundle includes the client + a Materia Magica world with some pre-installed things:  the Materia Magica sound pack, a GMCP handler, an area auto-mapper, a plane "atlas", a miniwindow for channel captures, a speedwalk manager, and a plugins updater.  Plus some other plugins that you can add if you want.
|w
|w
|D[ |WNote about Help |D]
|w
If you're running Windows Vista / 7 / newer, you'll need to |Cinstall Windows Help |wto be able to read MUSHclient's help files.
|w
Alternatively, you can read the online documentation here:
http://www.mushclient.com/scripts/doc.php
|w
|w
|D[ |RImportant |D]
|w
Many of the |Rplugins and scripts |win this bundle |Rwon't work properly if you run more than one character in the same MUSHclient window|w.
|w
|CStart a new MUSHclient instance for each character that you're running |w(as opposed to running them "tabbed" within the same MUSHclient window.)
|w
|w
|D[ |WScreen description |D]
|w
The client's screen will contain a main world (Materia Magica GMCP) + some plugins miniwindows inside it.
|w
]],


  ["p1"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p1 |D~
|w
|D[ |WConfiguration |D]
|w
|D*|w To adjust the |Wfont size|w, go to |CFile, Global Preferences|w.  Click on the |CDefaults|w tab.  There you can change the |COutput Font|w and the |CInput Font|w for all worlds.  (Make sure you choose a monospaced font, like Consolas, Courier New, Lucida Console, etc., or stuff on screen won't align properly.)  You'll need to |CSave World Details|w (Ctrl + S), then |Wclose|w and |Wreopen|w MUSHclient for these font settings to take effect.
|w
|*|w To adjust the |Wcolors|w, if they're too bright or too dim for your screen, go to |CGame, Configure, ANSI Colours|w.
|w
|D*|w If you prefer to |Wsee underlines|w for several things shown by Materia Magica (NPCs, items, players, etc.), go to |CGame, Configure, MXP/Pueblo|w, and uncheck the option |CMUD can remove underline|w.
|w
|D*|w To make MUSHclient |Wkeep commands in the command window|w, so they don't disappear when you press Enter (eg, to help you move if you're on a laptop without a numeric keypad), go to |CGame, Configure, Commands|w, and check the option |CAuto-repeat Commands|w.
|w
|D*|w To adjust the |Wmax line length|w, go to |CGame, Configure, Output|w, and adjust the number to the right of |CWrap output at column number...|w (it can be a number from 20 to 500.)
|w
|D*|w In game, it is a good idea to type |Cset page_length 120|w, which increases the amount of lines the game will feed you at a time to the max.  So you won't be interrupted so frequently by the [C]ontinue [R]edraw [B]ack [E]xit prompt.
|w
|w
|D[ |WMSP (MUD Sound Protocol) |D]
|w
MSP is handled by the |Wmsp_lua |wplugin.  Notice in Materia Magica |Wthis protocol requires |wthe |WMXP |wprotocol to work.  Also, your character needs to |Cset sound on|w.
|w
This bundle includes the |WMateria Magica sound pack|w, in |WMP3 |wformat.  All sound files are located in the MUSHclient/sounds/msp subfolder.
|w
|D* |wIf you move your MUSHclient installation to another disk or folder, you will need to type |Cmsp reset path|w, so it auto-adjusts to the new location.
|w
To see more details about this plugin, type |Wmsp_lua help|w,
|w
]],


  ["p2"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p2 |D~
|w
|D[ |WCaptures |D]
|w
The |Wcaptures |wminiwindow will start capturing the default channels (tells, ct, etc.) when you login.
|w
The miniwindow can be dragged to any position within the world window.
|w
|D* |wTo see the |Wlist of channel types |w(being captured and available), type |Clist captures|w.
|w
|D* |wTo |Wadd a channel|w to your captures, type |Ccapture <channel_type>|w - for example, |ccapture say|w.
|w
|D* |wTo |Wstop capturing a channel|w, type |Cuncapture <channel_type>|w - for example, |cuncapture announce|w.
|w
To see more details about these plugins, type |Wcapture2mini help|w, and |Wcapture2dworld help|w.
|w
|w
|D[ |WRepeat command |D]
|w
This plugin will let you repeat a command, by preceding it with a |C# |wsymbol and a number.  For example, |c#3 look |wwill send the look command 3 times.
|w
]],


  ["p3"] = [[|w
|D~ |GMUSHclient Bundle for Materia Magica, p3 |D~
|w
|D[ |WMaps |D]
|w
This bundle includes 2 plugins that show where you are at 2 different scales:
|w
|D- |WIMap |wshows your position within the current plane.  It looks like a big physical map of the current plane, with an arrow in it marking your position.
|w
|D- |wThe |WGMCP Mapper |wshows your current room when you're in a city, dungeon, or any other mapped area.
|w
Their miniwindows can be dragged anyhere within the main world window.
|w
To save screen space, they will start the same size and overlapping on screen, and (via another plugin named |WSwitch Maps|w) they will auto-toggle.  When you are in the wilds,  IMap will auto-show.  When you're in a non-wilds area, the area Mapper will auto-show.
|w
You can uninstall Switch Maps, if you'd rather resize / reposition / etc.  the maps manually.
|w
To see more details about these plugins, type |Wimap help|w, |Wmapper help|w, and |Wswitch_maps help|w.
|w
]],


  ["p4"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p4 |D~
|w
|D[ |WSpeedwalks |D]
|w
The |Wspeedwalk_manager_p2 |wplugin will help you travel between areas.
|w
|D* |wTo search for a city, dungeon, etc., or public ship's dock, type |Cspdn <partial_area_name>,|w or |Cspdn <public_ship_name>|w.  For example, |cspdn sigil|w.  Or |cspdn merdraco|w.  If any results are found, they will be shown as an abbreviation, followed by a description.  For example, |cSigN - Sigil, north|w.  (Note that the |C% |wsymbol can be used as a wildcard.)
|w
|D* |wTo start walking to a room, type |Cspdn <abbreviation>|w.  For example, to walk to the north gate of Sigil, we would type |cspdn SigN|w.
|w
This command requires the GMCP mapper to be installed, and it will only start speedwalks if the destination room is connected to the current room in the map.
|w
First, it will try to find a path from the current room to the destination room.  This process can be slow...  If a path is found, you will start speedwalking.
|w
|D* |wTo |Wstop |wa spdn speedwalk, type |Cmapper stop|w.
|w
|D* |wTo |Wresume |wa stopped speedwalk, type |Cmapper resume|w.
|w
|w
|D[ |WBazaar |D]
|w
The |Wbazaar_walk |wplugin lets you speedwalk to shops in the Alyrian Bazaar.  You need to be in the Bazaar area for it to work.
|w
|D* |wTo |Wwalk to a shop|w once you're in the Bazaar, type |Cbwalk <clan_number>|w, or |Cbwalk <player_name>|w.  For example, |cbwalk pete |wwould walk you to Pete's shop, if such thing existed.
|w
|w
To see more details about these plugins, type |Wspeedwalk_manager_p2 help|w, and |Wbazaar_walk help|w.
|w
]],


  ["p5"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p5 |D~
|w
|D[ |WThe area Mapper |D]
|w
The |WGMCP mapper |wwill auto-map all towns, dungeons, and any non-wilderness areas in general.  By default, it won't map the wilds, except for the roads and piers.

Its miniwindow can be dragged by the title, to anywhere within the main world window.

The room where you're standing is the one with a thick black border.  You can |Wzoom in/out |wby using the |Cmouse wheel|w.  You can |Wgo to |wa room by |Cclicking |won it.
|w
PK / function room colors are:        Terrain-based colors are:
|D- |Wwhite|w: safe                         |D- |Ssea green|w: wooded
|D- |Ilight coral|w: LPK                    |D- |ssteel blue|w: underwater
|D- |ttomato|w: NPK                         |D- |Llight cyan|w: freezing
|D- |Kdark red|w: CPK                       |D- |Rred|w: fire
|D- |Yyellow|w: shop                        |D- |Yyellow green|w: poison-gas
|D- |Pmedium purple|w: trainer              |D- |ygreen yellow|w: acid
|D- |Bblue border|w: dizzy                  |D- |Edeep sky blue|w: nothing
|D- gray border|w: another area           |D- |Hwheat|w: diggable
|w
Terrain colors are applied first, then by default PK / function colors are applied on top of them (where they overlap).
|w
|D* |wTo toggle the |WPK / function color set OFF|w (or back ON), type |Cmapper color terrain|w.
|w
The |Wwindow |wcan be made |Wbigger|w/|Wsmaller |wby clicking the |C[*] |won the bottom left corner, and editing |CWidth |wand |CHeight|w.  You can also change the default colors, font, etc.  in this |WConfiguration box|w.
|w
We've included a partial maps database, which has most starter areas pre-mapped.  (Notice this database is missing most of the room flags, so as you visit rooms for the first time, you will probably lag a bit, as the mapper updates its information on disk.  The next time you visit those rooms, this won't happen, and you'll be able to move faster.)
|w
]],


  ["p6"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p6 |D~
|w
|D[ |WThe area Mapper |D] |w(cont.)
|w
|D* |wTo |Wsearch for a room within your current area|w, type |Cmapper find <partial_name>|w.  For example, |cmapper find theater|w.  Results will be shown as a list of room names (as |Whyperlinks|w) + room ids + distances.
|w
|D* |wTo |Wsearch for a room anywhere in the mapped world|W, type |Cmapper where <partial_name>|w.  For example, |cmapper where honor|w.  (Note that the |C% |wsymbol can be used as a wildcard.)  Results will be shown as a list of room ids + room names (as |Whyperlinks|w) + area names.
|w
In both cases (mapper where, mapper find), if a hyperlink points to a CPK room, it will be tagged as |R[CPK]|w.  (But notice they won't warn you if your destination room isn't CPK, but you have to walk through CPK to reach it.)
|w
|D* |wTo |Wspeedwalk |wto a room, |Cclick on a hyperlink |wor type |Cmapper goto <room_id>|w.  This will only start speedwalks if the destination room is connected to the current room in the map.
|w
First, it will try to find a path from the current room to the destination room.  This process can be slow...  If a path is found, you will start speedwalking.
|w
|D* |wOnce you're speedwalking to a room, you can |Wstop |wby typing |Cmapper stop |w(then |Wcontinue |wby typing |Cmapper resume|w).
|w
|D* |wTo |Wsee directions to a room|w, instead of speedwalking to it, type |Cmapper path <room_id>|w.  It will try to find a path from the current room to the destination room.  If it succeeds, it will show the directions on screen.
|w
|w
To see more details about this plugin, type |Wmapper help|w.
|w
]],


  ["p7"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p7 |D~
|w
|D[ |WAliases |D]
|w
|WAliases |wcan be used to shorten commands, to run a sequence of commands, to name speedwalks, etc.
|w
|D* |wTo |Wopen the aliases window|w, go to |CGame, Configure, Aliases|w.
|w
This window shows the list of aliases that you have, sorted by group (since the |WTree View |woption is checked.)
|w
|D* |wTo |Wcreate a new alias|w, click |CAdd|w.  This will open the |WEdit Alias |wwindow.
|w
In the |WAlias |wbox, |Ctype the text |wyou want to use |Cto run the alias|w.  Use |C* |wto |Wreplace variable text|w.  For example, to make an alias named gr for grapple, you would type |cgr *|w.  The * replaces the target, which is variable.
|w
In the |WSend box, |Ctype the commands |wyou want to run when the alias is executed.  If you're going to run more than one command, |Ctype one command per line |w(press |WEnter |wafter each command).  If your alias has |W* |wfor variables, to use them here type |C%1 |wfor the first |W*|w, |C%2 |wfor the second |W*|w, etc.
|w
In the |WSend To |wlist, choose |CWorld |wif your alias will only be using game commands, or |CExecute |wif it will be calling other client aliases, or a combination of client aliases and game commands.  By default, it's set to "Execute".
|w
In the |WGroup |wbox, you can |Ctype a category name|w.  This is optional, but helps keep your aliases list less cluttered.
|w
The |WEnabled |wbox is |Cchecked |wby default, as it has to be on for the alias to be active.
|w
Aliases are |Wcase sensitive |wby default.  If you want your alias to |Wwork |wno matter if you type it in |Wupper or lower case|w, check the |CIgnore case |wbox.
|w
Once done, press |COK|w.
|w
]],


  ["p8"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p8 |D~
|w
|D[ |WAliases |D] |w(examples)
|w
For example, this is an alias that shortens a mapper command:
|w
|D- |wAlias: |Wmw *
|w
|D- |wSend:
|Wmapper where
|w
|D- |wSend to: |WExecute |w(it's already chosen by default)
|w
So, when you type |cmw church|w, the alias will execute, calling the mapper where alias, to search for all the rooms named church in your map database.
|w
|w
Another example: this is a backstab alias that sends several commands to the world:
|w
|D- |wAlias: |Wbs *
|w
|D- |wSend:
|Wremove weapon
wear hook
hide
backstab %1
|w
(Notice: one command per line)
|w
|D- |wSend To: |WWorld |wor |WExecute |w(Execute is already chosen by default)
|w
So, when you type |cbs pete|w, the alias will execute, so you will remove your weapon, wear your hook (if there's one in your inventory), hide, then backstab Pete (if he's in your same room.)
|w
]],


  ["p9"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p9 |D~
|w
|D[ |WTriggers |D]
|w
|WTriggers |wmake you react automatically to events in the MUD.  (Make sure you read |Chelp 1879 |wabout |WScripts and Botting|w, to make sure the trigger you want to make is legal in Materia Magica.)
|w
|D* |wTo |Wopen the triggers window|w, go to |CGame, Configure, Triggers|w,
|w
This window shows the list of triggers that you have, sorted by group (since the |WTree View |woption is checked.)
|w
|D* |wTo |Wcreate a new trigger|w, click |CAdd|w.  This will open the |WEdit Trigger |wwindow.
|w
In the |WTrigger |wbox, |Ctype or paste the text |wyou want to use |Cto fire the trigger|w.  Use |C* |wto |Wreplace variable text|w.  For example, to make a trigger that reacts when someone pokes you, you would use |c* pokes you in the ribs.|w.  The * replaces the person's name, which is variable.
|w
In the |WSend |wbox, |Ctype the commands |wyou want to run when the trigger fires.  If you're going to run more than one command, |Ctype one command per line |w(press |WEnter |wafter each command).  If your trigger has |W* |wfor variables, to use them here type |C%1 |wfor the first |W*|w, |C%2 |wfor the second |W*|w, etc.
|w
In the |WSend To |wlist, choose |CWorld |wif your trigger will only be using game commands, or |CExecute |wif it will be calling client aliases, or a combination of client aliases and game commands.  By default, it's set to "Execute".
|w
In the |WGroup |wbox, you can |Ctype a category name|w.  This is optional, but helps keep your triggers list less cluttered.
|w
The |WEnabled |wbox is |Cchecked |wby default, as it has to be on for the trigger to be active.
|w
The |WKeep evaluating |wbox is |Cchecked |wby default, and |Wshould always be left checked|w, in case other triggers match on the same text.  Otherwise, if your trigger happens to fire first, other triggers matching the same text will not work.
|w
Once done, press |COK|w.
|w
]],


  ["p10"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p10 |D~
|w
|D[ |WExample: Making a highlight trigger |D]
|w
In this example we will create a trigger to highlight when someone or something joins combat against you.  Also in this case, we will change both the font and the background color.
|w
|D- |wTrigger: |W* joins the melee opposing you.
|w(Notice I copied this line from my world window, pasted it in the trigger box, and I replaced the part that can change with an asterisk.)
|w
|D- |wChange colour and style to: |WOther...
|w
|D- |win the 1st color square below |WBoth|w, pick the font color, |WWhite|w.
|w
|D- |win the 2nd color square below |WBoth|w, pick the background color, |WSienna|w.
|w
|D- |wSend to: |WWorld|w.
|w
|D- |wGroup: |Whighlights|w (this isn't an actual requirement, but it's a good practice to keep your triggers organized.)
|w
Now whenever you're in combat, and another opponent joins the melee against you, it will be highlighted in white text over a brownish background.
|w
After testing the trigger, if you decide you want to keep it, press Ctrl + S to save it.
|w
]],


  ["p11"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p11 |D~
|w
|D[ |WExample: Making a trigger to gag stuff from screen |D]
|w
In this example, we will gag the first error line we get when we mistype a command.  For example, when I type |Whelb|w, I get this: |cThere is no command 'helb'. You may have meant: help, gclap"
|w
|D- |wTrigger: |WThere is no command '*'. You may have meant: *
|w(Notice I copied this line from my world window, pasted it in the trigger box, and I replaced all the parts that can change with asterisks.)
|w
|D- |wCheck the |WOmit from output box |wbox.
|w(This is what actually hides the line from screen.)
|w
|D- |wSend to: |WWorld|w.
|w
Now whenever you mistype a command, that first line suggesting alternative spellings will be gagged.
|w
After testing the trigger, if you decide you want to keep it, press Ctrl + S to save it.
|w
]],


  ["p12"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p12 |D~
|w
|D[ |WCommand stacking |D]
|w
By default, command stacking is disabled.  To |Wenable |wit, go to |CGame, Configure, Commands|w, check the |CCommand Stacking Using |wbox, and |Ctype the character |wyou want to use in the box to its right.
|w
|w
|D[ |WThe commands Sequencer |D]
|w
The |WSequencer |wplugin lets you send a list of commands to the world, one at a time, to avoid getting disconnected for spamming.  It is useful for aliases that run a long series of commands, like memorization aliases, aliases that farm reagents or sprigs producers and sort their items into different bags, etc.
|w
After running a command in its list, the Sequencer waits for the next prompt before sending the next command.
|w
|D* |wTo |Wuse the |wcommands |Wsequencer|w, type |Csequence commands|w, followed by the |Clist of commands |wyou want to send to the world, |Cseparated by ;|w (semicolon).
|w
For example:
|csequence commands open north;look north
|w
Another example:
|csequence commands open mahogany;get all mahogany;close mahogany;put all.sulfur earthen;put all.fish 2.earthen;put all.feather 3.earthen;put all.leaf 4.earthen;put all.sunstone 5.earthen;put all.runestone 6.earthen;drop all.reag
|w
This will make you open your mahogany puzzle box, get everything inside it, close the puzzle box, put all fire reagents into your first earthen bag, all your water reagents into your second earthen bag, etc.  Then it will drop the extra reagents that didn't fit in the bags.
|w
|w
|D[ |WNote about your command stacking character and the sequencer |D]
|w
|D* |wIf you're using |C;|w (semicolon) as your command stacking character, whenever you use |Wsequence commands|w, you will need to write two semicolons instead of one between commands - |C;;|w.
|w
For example:
|csequence commands open east;;look east
|w
]],


  ["p13"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p13 |D~
|w
|D[ Making aliases that work with and without a target |D]
|w
The |Waddalias |walias lets you create simple aliases that will work both with and without a target.
|w
|D* |wTo |Wadd an alias |wusing this feature, type |Caddalias <alias_name> <game_command or game_alias or client_alias>|w.  Noteice the name you choose for the alias cannot contain spaces.
|w
|w
For example:
|Waddalias b bash
|w
Then, once you've added it:
|cb goblin |wwill bash a goblin (if there's one in your room.)
|cb |wwill bash your current opponent in combat.
|cb south |wwill bash the south oor (if there is one)
|w
|w
Another example:
|Waddalias md cast 'magic dart'
|w
Then, once you've added it:
|cmd 'short rogue' |wwill cast magic dart on a short rogue (if there's one in your room.)
|cmd |wwill cast magic dart on your current opponent in combat.
|w
]],


  ["p14"] = [[|w
|w
|D~ |GMUSHclient Bundle for Materia Magica, p14 |D~
|w
|D[ |WPre-installed plugins |D]
|w
|D* |Wbazaar_walk |w- speedwalks you to vendors in the Alyrian Bazaar
|w
|D* |Wcapture2dworld |wand |Wcapture2mini |w- capture communications channels to a single miniwindow
|w
|D* |Wdetect_globals |wand |Wglobal_vars |w- the first one detects and keeps track of stuff related to your character, the second lets plugins share non-persistent "global" variables
|w
|D* |WIMap_GMCP |w- full plane "physical" map with a pointer marking your position, to help you travel
|w
|D* |WMM_GMCP_handler |w- adds GMCP support to MUSHclient (adapted from the plugin written by Lasher for Aardwolf)
|w
|D* |WMM_GMCP_Mapper |w- an area auto-mapper that is aware of your current location via the GMCP protocol; this distribution also includes a database with most starter areas pre-mapped (adapted from a plugin written by Nick Gammon, which didn't support GMCP)
|w
|D* |Wmsp_lua |w- adds MSP (MUD Sound Protocol) support to MUSHclient; this distribution also includes the Materia Magica sound pack (adapted from a plugin written by Christof)
|w
|D* |Wplugins_updater |w- lets you update your plugins from your MUSHclient command window
|w
|D* |WRepeat Command |w- repeats a command "x" times (written by Nick Gammon)
|w
|D* |Wsequencer |w- sends a list of commands one at a time, to avoid spam / disconnection
|w
|D* |Wspeedwalk_manager_p2 |w- command line speedwalks, speedwalk to areas by area name, speedwalk to public ship's docks
|w
|D* |Wswitch_maps |w- auto-toggles IMap and the GMCP area Mapper on / off depending on your current location, to save screen space.
|w
|D* |Wlesson |w - this plugin!
|w
]],


}



----------------
-- show a page
----------------

local code_to_name = {
  ["B"] = "blue",
  ["R"] = "red",
  ["C"] = "cyan",
  ["M"] = "magenta",
  ["Y"] = "yellow",
  ["W"] = "white",
  ["G"] = "lime",
  ["b"] = "navy",
  ["r"] = "maroon",
  ["c"] = "teal",
  ["m"] = "purple",
  ["y"] = "olive",
  ["w"] = "silver",
  ["g"] = "green",
  ["D"] = "gray",
-- :x
  ["E"] = "deepskyblue",
  ["H"] = "wheat",
  ["I"] = "lightcoral",
  ["K"] = "darkred",
  ["L"] = "lightcyan",
  ["P"] = "mediumpurple",
  ["S"] = "seagreen",
  ["s"] = "steelblue",
  ["t"] = "tomato",
  ["Y"] = "yellowgreen",
  ["y"] = "greenyellow",
}


function show_a_page(page)
  local old_color, pos, l, aux, code, res

  if (page) then
    old_color = "w"

    for line in string.gmatch(page, "[^\r\n]+") do
      res = {}
      l = line

      pos = string.find(l, "|")

      while (pos) do
        aux = string.sub(l, 1, pos - 1)
        code = string.sub(l, pos + 1, pos + 1)

        if (aux) and (aux ~= "") then
          if (#res == 0) then
            res[1] = {
              color = old_color,
              text = aux,
            }
          else
            res[#res].text = aux
          end
        end

        l = string.sub(l, pos + 2, string.len(l))

        res[#res + 1] = {
          color = code or old_color
        }
        old_color = code or old_color

        pos = string.find(l, "|")
      end

      if (l) and (l ~= "") then
        if (#res == 0) then
          res[1] = {
            color = old_color,
            text = l,
          }
        else
          res[#res].text = l
        end
      end

      for i = 1, #res do
        if (res[i].text) then
          ColourTell(code_to_name[res[i].color], "black", res[i].text)
        end
      end

      Note("")
      res = nil
    end
  end
end


]]>

</script>

</muclient>
