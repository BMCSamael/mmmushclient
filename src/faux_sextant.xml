<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, March 16, 2012, 11:48 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "faux_sextant" generated by Plugin Wizard -->

<muclient>

<plugin
   name="faux_sextant"
   author="Ruthgul"
   id="909d8c23b717f4de1262d0a4"
   language="Lua"
   purpose="shows GMCP coords on screen"
   save_state="y"
   date_written="2012-03-16 23:45:19"
   date_modified="2014-11-06 09:29:44"
   requires="4.71"
   version="1.1"
   >

<description trim="y">

<![CDATA[

.----------------.
 | faux_sextant |
`----------------'

Shows GMCP sextant coords, anchored on prompt. It doesn't require a sextant.
If logging is enabled, it can also write coords to the logfile.


*** REQUIRES ***

- MM_GMCP_Handler (plugin id="f67c4339ed0591a5b010d05b") must be installed and enabled.
- Client setting: Game, Configure, Output > [x] Convert IAC EOR/GA to new line (must be checked).
- Sapi_speaker or Text-To-Speech (plugin id = 463242566069ebfd1b379ec1, by Nick Gammon) must be installed and enabled for show coords to read coords using SAPI instead of showing them on screen.


Syntax:

* show coords  - shows coords, once
* sextant [on|off]  -  toggle on-screen coords on/off (on by default)
* log coords [on|off]  - toggles logging of sextant coords on/off (on by default)


Author: Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Aliases  -->

<aliases>

  <alias
   match="^show[ ]+coords$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>show_coords()
</send>
  </alias>

  <alias
   match="^sextant(|[ ]+(?P&lt;status&gt;(on|off)))$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_coords_to("%&lt;status&gt;")
</send>
  </alias>

  <alias
   match="^log[ ]+coords(|[ ]+(?P&lt;status&gt;(on|off)))$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_log_coords_to("%&lt;status&gt;")
</send>
  </alias>


<!--  Plugin help  -->

  <alias
   script="OnHelp"
   match="^faux_sextant(|(\:| )help)$"
   regexp="y"
   enabled="y"
  >
  </alias>

</aliases>



<!--  Triggers  -->

<triggers>

<!-- on prompt -->

  <trigger
   name="a_prompt"
   keep_evaluating="y"
   match="^(|[^ ]+(.*?))(\&lt;(.+)hp (.+)sp (.+)st\&gt;|\(.+\)|\&gt;) $"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>show_coords()
</send>
  </trigger>

</triggers>



<!--  Scripts  -->

<script>

<![CDATA[

require "wait"
require "gmcphelper"


-----------------
-- plugin stuff
-----------------

function OnPluginInstall()
  wait.make(function()
    Tell("-- " .. GetPluginInfo(GetPluginID (), 1) .. ": type ")
    ColourTell("silver", "black", GetPluginInfo(GetPluginID (), 1) .. " help")
    Note(" to see info about this plugin --")

    sextant_started = false

    config = {
      show_sextant = false,
    }
    EnableTrigger("a_prompt", false)

    -- give the plugins time to initialize
    wait.time(3)
    detect_plugins()
  end)
end


function OnPluginConnect()
  EnableTrigger("a_prompt", false)
end


function OnPluginListChanged()
  detect_plugins()
end


function detect_plugins()
  use_sapi = sapi_plugin_present()
  reader_present = reader_plugin_present()
end


function is_plugin_present(name, id)
  local res = false

  local plugin_name = GetPluginInfo(id, 1)

  if (plugin_name == name) then
    -- is it enabled?
    if (GetPluginInfo(id, 17)) then
      res = true
    end
  end

  return res
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID(), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo(GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/faux_sextant.xml",
  }
  return (table.concat(t, ";"))
end



---------------
-- GMCP stuff
---------------

function OnPluginBroadcast(msg, id, name, text)
  if (id =="f67c4339ed0591a5b010d05b") then -- GMCP message
    if (text == "room.info") then -- room.info
      get_gmcp_room()

      if (not sextant_started) then
        sextant_started = true -- we start on first GMCP room package

        load_config()
        config_coords()
      end
    end
  end
end


function get_gmcp_room()
  local res, gmcparg = CallPlugin("f67c4339ed0591a5b010d05b", "gmcpval", "room.info")
  luastmt = "gmcpdata = " .. gmcparg

  assert(loadstring(luastmt or ""))()
end



-----------
-- config
-----------

function load_config()
  config = {
    show_sextant = ((GetVariable("show_sextant") or "true") == "true"),
    log_coords = ((GetVariable("log_coords") or "true") == "true"),
  }
end


function save_config()
  SetVariable("show_sextant", tostring(config.show_sextant))
  SetVariable("log_coords", tostring(config.log_coords))

  SaveState()
end



------------------
-- sextant stuff
------------------

function toggle_coords_to(status)
  if (sextant_started) then
    config.show_sextant = do_toggle(config.show_sextant, status)

    save_config()

    config_coords()
  end
end


function toggle_log_coords_to(status)
  if (sextant_started) then
    config.log_coords = do_toggle(config.log_coords, status)

    save_config()

    if (config.log_coords) then
      Note("-- faux_sextant: save coords in logfile ON --")

    else
      Note("-- faux_sextant: save coords in logfile OFF --")
    end
  end
end


function do_toggle(var, status)
  if (status == "on") then
    var = true
  elseif (status == "off") then
    var = false
  else
    var = not var
  end

  return var
end


function config_coords()
  if (sextant_started) then
    if (config.show_sextant) then
      EnableTrigger("a_prompt", true)
      Note("-- faux_sextant: on-screen coords ON --")

    else
      EnableTrigger("a_prompt", false)
      Note("-- faux_sextant: on-screen coords OFF --")
    end
  end
end


function show_coords()
  local posx, posy
  posx = gmcpval("coord.x")
  posy = gmcpval("coord.y")

  if (posx) and (posy) then -- gmcp installed + working
    if (reader_present)
    and (use_sapi) then
    -- both MushReader and a SAPI plugin are present
    -- so read the coords using SAPI
      sapi_say(posx .. ", " .. posy)

    else
    -- show coords on screen
      Tell("[")
      ColourTell("silver", "black", posx)
      Tell(", ")
      ColourTell("silver", "black", posy)
      Note("]")
    end

    if (config.log_coords) then
      WriteLog("[" .. posx .. "," .. posy .. "]")
      -- include coords in logfile, if logging
    end
  end
end



------------------------
-- sapi / reader stuff
------------------------

function sapi_say(text)
  if (use_sapi) then
    local res = CallPlugin("463242566069ebfd1b379ec1", "say", text)
  end
end


function sapi_plugin_present()
  return is_plugin_present("Sapi_speaker", "463242566069ebfd1b379ec1") or is_plugin_present("Text_To_Speech", "463242566069ebfd1b379ec1")
end


function reader_plugin_present()
  return is_plugin_present("MushReader", "925cdd0331023d9f0b8f05a7")
end


]]>

</script>

</muclient>
