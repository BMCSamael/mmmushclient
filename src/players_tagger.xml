<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, July 10, 2012, 8:08 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "players_tagger" generated by Plugin Wizard -->

<muclient>

<plugin
   name="players_tagger"
   author="Ruthgul"
   id="cab11fa55cae7d04b2fe8b70"
   language="Lua"
   purpose="tags who/where output (ally / enemy)"
   save_state="y"
   date_written="2012-07-10 20:31:44"
   date_modified="2014-05-10 12:55:10"
   requires="4.71"
   version="1.0"
   >

<description trim="y">

<![CDATA[

.------------------.
 | players_tagger |
`------------------'

Adds a tag to who/where output, marking players as allies or enemies, if applicable.


Syntax:

* [show|hide] tags  - toggles tags on/off (default is off)

* [ally|unally] clan <clan_number>  - adds/removes a clan's players to/from the allies list
* [ally|unally] player <player_name>  - adds/removes a player to/from the allies list

* [dubious|undubious] clan <clan_number>  - adds/removes a clan's players to/from the dubious list
* [dubious|undubious] player <player_name>  - adds/removes a player to/from the dubious list

* [enemy|unenemy] clan <clan_number>  - adds/removes a clan's players to/from the enemies list
* [enemy|unenemy] player <player_name>  - adds/removes a player to/from the enemies list

* list tags  - shows the lists of tagged players


Author: Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Variables  -->

<variables>

  <variable name="locations">Arena|At Sea|Bazaar|Castle|Clan|Ctf|Dungn|Forest|Hall|Haven|Home|Inn|Isle|Keep|Midair|Moon|Novice|Office|Planar|Shrine|Social|Suburb|Tavern|Tower|Towne|Underg|Underw|Villge|Wilds|[ ]+|[\?]+</variable>

</variables>



<!--  Triggers  -->

<triggers>

<!-- populating lists -->

  <trigger
   name="start_clan_list"
   keep_evaluating="y"
   match="^(Member Roster for Clan \#(?P&lt;num&gt;.+)\, (.+) \((.+)\)\:|No such clan\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>clan_list_start("%&lt;num&gt;")
</send>
  </trigger>

  <trigger
   name="line_clan_list"
   keep_evaluating="y"
   match="^\[[ ]*[0-9]+\][ ]+(|\*)(?P&lt;name&gt;[A-Za-z]+)[ ]+[A-Za-z \(\)]+[ ]*$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>clan_list_line("%&lt;name&gt;")
</send>
  </trigger>

  <trigger
   name="end_clan_list"
   keep_evaluating="y"
   match="^$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>clan_list_end()
</send>
  </trigger>


<!-- tag where -->

  <trigger
   name="start_where_list"
   keep_evaluating="y"
   expand_variables="y"
   match="^Visible player\(s\) near you\:$"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>where_list_start()
</send>
  </trigger>

  <trigger
   group="where_line"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!ally)[ ]+(.+)$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>trigger_style_runs = TriggerStyleRuns
show_ally()
</send>
  </trigger>

  <trigger
   group="where_line"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!dubious)[ ]+(.+)$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>trigger_style_runs = TriggerStyleRuns
show_dubious()
</send>
  </trigger>

  <trigger
   group="where_line"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!enemy)[ ]+(.+)$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>trigger_style_runs = TriggerStyleRuns
show_enemy()
</send>
  </trigger>

  <trigger
   group="where_line"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!noob)[ ]+(.+)$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>trigger_style_runs = TriggerStyleRuns
show_noob()
</send>
  </trigger>

  <trigger
   name="end_where_list"
   keep_evaluating="y"
   expand_variables="y"
   match="^$"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>where_list_end()
</send>
  </trigger>


<!-- tag who -->

  <trigger
   name="start_who_list"
   keep_evaluating="y"
   expand_variables="y"
   match="^ MATERIA MAGICA\: (Current|Search) Players Online$"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>who_list_start()
--Note("started")
</send>
  </trigger>

  <trigger
   group="who_line"
   keep_evaluating="y"
   expand_variables="y"
   match="^ \[[0-9]+[ ]*\:[0-9]+[ ]+(F|M|N)[ ]+[^ ]+(|[ ]+[^ ]+)[ ]+(@!locations)[ ]*\] (@!ally) (.*?)$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>trigger_style_runs = TriggerStyleRuns
show_ally()
</send>
  </trigger>

  <trigger
   group="who_line"
   keep_evaluating="y"
   expand_variables="y"
   match="^ \[[0-9]+[ ]*\:[0-9]+[ ]+(F|M|N)[ ]+[^ ]+[ ]+(|[^ ]+[ ]+)(@!locations)[ ]*\] (@!dubious) (.*?)$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>trigger_style_runs = TriggerStyleRuns
show_dubious()
</send>
  </trigger>

  <trigger
   group="who_line"
   keep_evaluating="y"
   expand_variables="y"
   match="^ \[[0-9]+[ ]*\:[0-9]+[ ]+(F|M|N)[ ]+[^ ]+[ ]+(|[^ ]+[ ]+)(@!locations)[ ]*\] (@!enemy) (.*?)$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>trigger_style_runs = TriggerStyleRuns
show_enemy()
</send>
  </trigger>

  <trigger
   group="who_line"
   keep_evaluating="y"
   expand_variables="y"
   match="^ \[[0-9]+[ ]*\:[0-9]+[ ]+(F|M|N)[ ]+[^ ]+[ ]+(|[^ ]+[ ]+)(@!locations)[ ]*\] (@!noob) (.*?)$"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>trigger_style_runs = TriggerStyleRuns
show_noob()
</send>
  </trigger>

  <trigger
   name="end_who_list"
   keep_evaluating="y"
   expand_variables="y"
   match="^ Total Online\: (.+)$"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>who_list_end()
</send>
  </trigger>

</triggers>



<!--  Aliases  -->

<aliases>

<!-- toggle -->

  <alias
   enabled="y"
   match="^(?P&lt;how&gt;(show|hide)) tags$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_tags("%&lt;how&gt;")
</send>
  </alias>


<!-- (de)populating lists -->

  <alias
   enabled="y"
   match="^(?P&lt;tag&gt;(ally|dubious|enemy|noob)) clan (?P&lt;num&gt;[0-9]+)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>tag_clan("%&lt;tag&gt;", "%&lt;num&gt;")
</send>
  </alias>


  <alias
   enabled="y"
   match="^un(?P&lt;tag&gt;(ally|dubious|enemy|noob)) clan (?P&lt;num&gt;[0-9]+)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>untag_clan("%&lt;tag&gt;", "%&lt;num&gt;")
</send>
  </alias>


  <alias
   enabled="y"
   match="^(?P&lt;tag&gt;(ally|dubious|enemy|noob)) player (?P&lt;name&gt;[A-Za-z]+)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>tag_player("%&lt;tag&gt;", "%&lt;name&gt;")
</send>
  </alias>


  <alias
   enabled="y"
   match="^un(?P&lt;tag&gt;(ally|dubious|enemy|noob)) player (?P&lt;name&gt;[A-Za-z]+)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>untag_player("%&lt;tag&gt;", "%&lt;name&gt;")
</send>
  </alias>


  <alias
   enabled="y"
   match="^list tags$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>list_tagged()
</send>
  </alias>


<!--  Plugin help  -->

  <alias
   enabled="y"
   match="^players\_tagger(|( |\:)help)$"
   regexp="y"
   script="OnHelp"
  >
  </alias>

</aliases>



<!--  Scripts  -->

<script>

<![CDATA[

-----------
-- plugin
-----------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID(), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID(), 1) .. " help")
  Note(" to see info about this plugin --")

  init_tags()
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID(), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo(GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/players_tagger.xml",
  }
  return (table.concat(t, ";"))
end


-----------------
-- tables stuff
-----------------

function find_index(t, item)
  res = nil

  for i = 1, #t do
    if (t[i] == item) then
      res = i
      break
    end
  end

  return res
end


function add_to_table(t, item)
  local i = find_index(t, item)
  if (not i) then
    t[#t + 1] = item
    table.sort(t) -- keep it sorted alphabetically
  end
end


function del_from_table(t, item)
  local i = find_index(t, item)
  if (i) then
    table.remove(t, i)
  end
end


----------------
-- lists stuff
----------------

function list_to_table(list)
  local list = GetVariable(list)
  local t
  if (not list) or (list == "") then
    t = {}
  else
    t = utils.split(list, "|")
  end
  return t
end


function add_to_list(list, item)
  local t = list_to_table(list)
  add_to_table(t, item)
  SetVariable(list, table.concat(t, "|"))
end


function del_from_list(list, item)
  local t = list_to_table(list)
  del_from_table(t, item)
  SetVariable(list, table.concat(t, "|"))
end


function is_listed(list, item)
  local t = list_to_table(list)
  return (find_index(t, item) ~= nil)
end


--------------------------
-- (de-)populating lists
--------------------------

local tags = {"ally", "dubious", "enemy", "noob"}


function list_clan(num)
  EnableTrigger("start_clan_list", true)
  Note("-- players_tagger: sending 'clan list " .. num .. "' to capture the list of players for that clan --")
  Send("clan list " .. num)
end


function tag_clan(tag, num)
  mode = tag
  list_clan(num)
end


function untag_clan(tag, num)
  mode = "not " .. tag
  list_clan(num)
end


function tag_player(tag, name)
  local oktag = true
  name = capitalize(name)

  for i = 1, #tags do
    if (tags[i] ~= tag) then
      if (is_listed(tags[i], name)) then
        Note("-- players_tagger: remove player from the " .. tags[i] .. " list first --")
        oktag = false
      end
    end
  end

  if (oktag) then
    add_to_list(tag, name)
    SaveState()
    Tell("-- players_tagger: player ")
    ColourTell("silver", "black", name)
    Tell(" is ")
    ColourTell("silver", "black", tag)
    Note(" --")
  end
end


function untag_player(tag, name)
  name = capitalize(name)

  if (is_listed(tag, name)) then
    del_from_list(tag, name)
    SaveState()
    Tell("-- players_tagger: player ")
    ColourTell("silver", "black", name)
    Tell(" is ")
    ColourTell("silver", "black", "not " .. tag)
    Note(" --")

  else
    Note("-- players_tagger: player is not in the " .. tag  .. " list --")
  end
end


function capitalize(name)
  if (not name) then
    return
  end

  if (name == "") then
    return ""
  end

  local c = string.upper(string.sub(name, 1,  1))
  if (string.len(name) == 1) then
    return c
  end

  local res = c .. string.lower(string.sub(name, 2, string.len(name)))
  return res
end


function clan_list_start(num)
  EnableTrigger("start_clan_list", false)
  if (num ~= "") then

    local success = false

    notmode = nil
    if (string.find(mode, "not ") == 1) then
      notmode = string.gsub(mode, "not ", "")
    end

    if (not notmode) then -- mode is ally|dubious|enemy|noob
      local oktag = true

      for i = 1, #tags do
        if (tags[i] ~= mode) then
          if (is_listed(tags[i] .. "_clans", num)) then
            Note("-- players_tagger: remove clan from the " .. tags[i] .. "_clans list first --")
            oktag = false
          end
        end
      end

      if (oktag) then
        add_to_list(mode .. "_clans", num)
        success = true
      end

    else -- mode is not ally|not dubious|not enemy|not noob
      if (is_listed(notmode .. "_clans", num)) then
        del_from_list(notmode .. "_clans", num)
        success = true

      else
        Note("-- players_tagger: that clan is not in the " .. notmode .. "_clans list --")
      end
    end

    if (success) then
      Tell("-- players_tagger: clan ")
      ColourTell("silver", "black", num)
      Tell(" is ")
      ColourTell("silver", "black", mode)
      Note(" --")
    end

    counting = 0
    EnableTrigger("line_clan_list", true)
    EnableTrigger("end_clan_list", true)
  end
end


function clan_list_line(name)
  add_to_list(mode, name)
  counting = counting + 1
end


function clan_list_end()
  EnableTrigger("line_clan_list", false)
  EnableTrigger("end_clan_list", false)
  SaveState()

  if (not notmode) then -- mode is ally|dubious|enemy|noob
    Tell("-- players_tagger: added ")

  else -- mode is not ally|not dubious|not enemy|not noob
    Tell("-- players_tagger: removed ")
  end

  ColourTell("silver", "black", counting or 0)
  Note(" players --")
  counting = nil
end


---------------
-- show stuff
---------------

function init_tags()
  local x = GetVariable("show_tags")
  if (x == nil) or (x == "") then
    SetVariable("show_tags", "true") -- defaults to true
    EnableTrigger("start_where_list", true)
    EnableTrigger("start_who_list", true)
    SaveState()

  elseif (x == "true") then
    EnableTrigger("start_where_list", true)
    EnableTrigger("start_who_list", true)
  end
end


function toggle_tags(how)
  if (how == "show") then
    SetVariable("show_tags", "true")
    EnableTrigger("start_where_list", true)
    EnableTrigger("start_who_list", true)
    Note("-- players_tagger: showing tags ")

  else -- hide
    SetVariable("show_tags", "false")
    EnableTrigger("start_where_list", false)
    EnableTrigger("start_who_list", false)
    Note("-- players_tagger: hiding tags ")
  end

  SaveState()
end


function list_tagged()
  Note("-- players_tagger --")

  for i = 1, #tags do
    Tell("* " .. tags[i] .. " clans: ")
    ColourNote("silver", "black", GetVariable(tags[i] .. "_clans") or "-")
  end

  for i = 1, #tags do
    Tell("* " .. tags[i] .. " players: ")
    ColourNote("silver", "black", GetVariable(tags[i]) or "-")
  end
end


function where_list_start()
  EnableTriggerGroup("where_line", true)
  EnableTrigger("end_where_list", true)
end


function where_list_end()
  EnableTriggerGroup("where_line", false)
  EnableTrigger("end_where_list", false)
end


function who_list_start()
  EnableTriggerGroup("who_line", true)
  EnableTrigger("end_who_list", true)
end


function who_list_end()
  EnableTriggerGroup("who_line", false)
  EnableTrigger("end_who_list", false)
end


function show_normal()
  for i = 1, #trigger_style_runs do
    ColourTell(RGBColourToName(trigger_style_runs[i].textcolour),
               RGBColourToName(trigger_style_runs[i].backcolour),
               trigger_style_runs[i].text)
  end
end


function show_ally()
  show_normal()
  ColourNote("lime", "black", " <ally>")
end


function show_dubious()
  show_normal()
  ColourNote("yellow", "black", " <dubious>")
end


function show_enemy()
  show_normal()
  ColourNote("red", "black", " <enemy>")
end


function show_noob()
  show_normal()
  ColourNote("fuchsia", "black", " <noob>")
end


]]>

</script>

</muclient>
