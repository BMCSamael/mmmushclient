<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Monday, May 14, 2012, 3:09 AM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "vitals_bars" generated by Plugin Wizard -->

<muclient>

<plugin
   name="vitals_bars"
   author="Ruthgul"
   id="a6ef71f61368df7da2fcf5a6"
   language="Lua"
   purpose="shows gauges for hp/sp/st in a miniwindow"
   save_state="y"
   date_written="2012-05-14 03:08:38"
   date_modified="2013-07-05 10:46:22"
   requires="4.71"
   version="1.0"
   >

<description trim="y">

<![CDATA[

.---------------.
 | vitals_bars |
`---------------'

Shows gauges for hp/sp/st in a miniwindow.

Syntax:

* vitals [show|hide]  - to show/hide the vitals gauges miniwindow

* vitals size [1|2]  - makes the miniwindow normal size (1) or double size (2) - default is 1

* resync maxes  - if you (un)equipped gear that alters your max vitals, this will recapture them (temporary stuff like magnetic influence should be auto-fixed)


Author: Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Triggers  -->

<triggers>

<!-- on first prompt -->

  <trigger
   enabled="y"
   name="first_prompt"
   keep_evaluating="y"
   match="^(|[^ ]+(.*?))(\&lt;(.+)hp (.+)sp (.+)st\&gt;|\(.+\)) $"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>on_first_prompt()
</send>
  </trigger>


<!-- max vitals -->

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^[0-9]+\% [0-9\,]+ \/ (?P&lt;max&gt;[0-9\,]+) HP\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>set_max_hp("%&lt;max&gt;")
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^[0-9]+\% [0-9\,]+ \/ (?P&lt;max&gt;[0-9\,]+) SP\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>set_max_sp("%&lt;max&gt;")
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^[0-9]+\% [0-9\,]+ \/ (?P&lt;max&gt;[0-9\,]+) ST\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>set_max_st("%&lt;max&gt;")
</send>
  </trigger>


<!-- current vitals -->

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(.*?)\&lt;(?P&lt;hp&gt;.+)hp (?P&lt;sp&gt;.+)sp (?P&lt;st&gt;.+)st\&gt; $"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>current_vitals("%&lt;hp&gt;", "%&lt;sp&gt;", "%&lt;st&gt;")
</send>
  </trigger>

</triggers>



<!--  Aliases  -->

<aliases>

  <alias
   match="^vitals (?P&lt;state&gt;hide|show)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_vitals("%&lt;state&gt;")
</send>
  </alias>


  <alias
   match="^vitals size (?P&lt;size&gt;1|2)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>set_size("%&lt;size&gt;")
</send>
  </alias>


  <alias
   match="^resync maxes$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>grab_maxes()
</send>
  </alias>


<!--  Plugin help  -->

  <alias
   enabled="y"
   script="OnHelp"
   match="^vitals\_bars(|( |\:)help)$"
   regexp="y"
  >
  </alias>

</aliases>



<!--  Scripts  -->

<script>

<![CDATA[

require "movewindow"
require "gauge"


-----------------
-- plugin stuff
-----------------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID (), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID (), 1) .. " help")
  Note(" to see info about this plugin --")

  multiplier = tonumber(GetVariable("multiplier") or 1)

  EnableTrigger("first_prompt", true)
end


function OnHelp ()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID (), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo (GetPluginID(), 14)) .. ")")
end


function OnPluginClose()
  if (vitals_started) then
    movewindow.save_state(igauge)
    WindowShow(igauge, false)  -- hide window on removal
  end
end


function OnPluginConnect()
  EnableTrigger("first_prompt", true)
end


function OnPluginDisable()
  if (vitals_started) then
    WindowShow(igauge, false)  -- hide window on disable
  end
end


function OnPluginSaveState()
  if (vitals_started) then
    movewindow.save_state(igauge)
  end
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/vitals_bars.xml",
  }
  return (table.concat(t, ";"))
end



---------------
-- init stuff
---------------

function on_first_prompt()
  EnableTrigger("first_prompt", false)

  grab_maxes()
end



------------
-- toggles
------------

function toggle_vitals(state)
  if (vitals_started) then
    if (state == "show") then
      WindowShow(igauge, true)
    else
      WindowShow(igauge, false)
    end
  end
end


function set_size(size)
  multiplier = tonumber(size)
  SetVariable("multiplier", multiplier)
  SaveState()

  if (vitals_started) then
    vitals_start()
  end
end


-----------------
-- window stuff
-----------------

width = 125
height = 80
bgcol = ColourNameToRGB("black")
bordercol = "2434341"
shadowcol = ColourNameToRGB("black")

font = "Trebuchet MS"
fontsize = 9
fontcol = ColourNameToRGB("silver")

gauges_height = height / 4
gauges_spacing = height / 28


function vitals_start()
  igauge = "igauge_" .. GetPluginID()

  WindowCreate (igauge, 0, 0, 0, 0, 0, 0, 0)
  WindowFont(igauge, "fgauge", font, fontsize * multiplier, false, false, false, false)
  font_height = WindowFontInfo(igauge, "fgauge", 1)

  windowinfo = movewindow.install(igauge, miniwin.pos_top_center)

  WindowShow(igauge, false)

  WindowCreate(igauge, windowinfo.window_left, windowinfo.window_top, width * multiplier, height * multiplier, windowinfo.window_mode, windowinfo.window_flags, bgcol)

  -- let them move it around
  movewindow.add_drag_handler(igauge, 0, 0, width * multiplier, height * multiplier, 10)

  -- draw the 3D box that will contain all gauges
  draw_3d_box(igauge, 2, 2, (width - 3) * multiplier, (height - 3) * multiplier)

  vitals_redraw()

  WindowShow(igauge, true)

  vitals_started = true
end


function vitals_redraw()
  if (vitals_started) then
    WindowShow(igauge, false)

    show_gauges()

    WindowShow(igauge, true)
  end
end


function vitals_show()
  if (vitals_started) then
    WindowShow(igauge, true)
  end
end


function vitals_hide()
  if (vitals_started) then
    WindowShow(igauge, false)
  end
end


-----------------
-- gauges stuff
-----------------

function show_gauge(max, current, name, wherey, color)
  -- show gauge's name
  draw_text_box(igauge, "fgauge", 10 * multiplier, wherey + 2 * multiplier, name, false, fontcol, bgcol, bgcol)

  if (max ~= nil) and (current ~= nil) then
    -- fix for temporary +max-hp buffs like magnetic influence
    if (current > max) then
      max = current
    end

    gauge(igauge, name, current, max, 30 * multiplier, wherey, (width - 37) * multiplier, gauges_height * multiplier, ColourNameToRGB(color), bgcol, 3, bgcol, bordercol, shadowcol)

  else
    gauge(igauge, name, 100, 100, 30 * multiplier, wherey, (width - 37) * multiplier, gauges_height * multiplier, bgcol, bgcol, 3, bgcol, bordercol, nil)
  end
end


function show_gauges()
  -- hp gauge
  show_gauge(max_hp, hp, "hp: ", 5 + gauges_spacing * multiplier, "green")

  -- sp gauge
  show_gauge(max_sp, sp, "sp: ", 5 + gauges_height * multiplier + (gauges_spacing * multiplier * 2), "blue")

  -- st gauge
  show_gauge(max_st, st, "st: ", 5 + (gauges_height * multiplier * 2) + (gauges_spacing * multiplier * 3), "slateblue")
end


---------------
-- max vitals
---------------

function grab_maxes()
  max_hp = nil
  max_sp = nil
  max_st = nil
  Note("-- vitals_bars: sending 'score hp/sp/st' to capture your max vitals --")
  Send("score hp")
  Send("score sp")
  Send("score st")
  vitals_start()
end


function to_number(txt)
  local num = string.gsub(txt, ",", "")
  return tonumber(num)
end


function set_max_hp(max)
  max_hp = to_number(max)
end

function set_max_sp(max)
  max_sp = to_number(max)
end


function set_max_st(max)
  max_st = to_number(max)
end


-------------------
-- current vitals
-------------------

function current_vitals(my_hp, my_sp, my_st)
  hp = tonumber(my_hp)
  sp = tonumber(my_sp)
  st = tonumber(my_st)

  vitals_redraw()
end


]]>

</script>

</muclient>
