<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, October 13, 2011, 12:37 PM -->
<!-- MuClient version 4.73 -->

<!-- Plugin "meh_prompt" generated by Plugin Wizard -->

<muclient>

<plugin
   name="meh_prompt"
   author="Ruthgul"
   id="98e6a55b66fa94328c5dc168"
   language="Lua"
   purpose="abridges prompt tags + adds info to your prompt"
   save_state="y"
   date_written="2011-10-13 15:40:06"
   date_modified="2014-11-06 09:49:13"
   requires="4.71"
   version="1.05"
   >

<description trim="y">

<![CDATA[

.--------------.
 | meh_prompt |
`--------------'

- abridges your prompt tags - eg, [a] instead of [AWAY], etc.

- recolors your invisibility asterisk (lime * instead of blue *), to match the asterisks seen on other characters

- adds tags for sanctuary (white *), fireshield (red *), pass door (cyan *), levitation (cyan -), haste (silver /), hide (dark grey *), shape shifting (dark yellow *)

- lets you gag your "TAG!" state (eg, to stay tagged, and not see it)

- adds a tag for guide enabled (dark cyan g)

(You can edit the variables below to change colors as needed.)


*** REQUIRES ***

- MM_GMCP_Handler (plugin id="f67c4339ed0591a5b010d05b") must be installed and enabled.
- detect_globals (plugin id="d900cb999816b1f6f2d4bdc5") must be installed and enabled.
- global_vars (plugin id="97784abf5f30629a0d7e7307") must be installed and enabled.

- Client setting: Game, Configure, Output > [x] Convert IAC EOR/GA to new line (must be checked).

- Game setting: SHOW-EXITS must be ON.


Syntax:

* meh prompt [on|off]  - toggle meh_prompt on/off (on by default)
* meh tag [on|off]  - toggles tag! gagging off/on (gags by default)


Author: Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Variables -->

<variables>

<!-- color -->

  <variable name="guide">teal</variable>

  <variable name="fireshield">red</variable>
  <variable name="invis">lime</variable>
  <variable name="passdoor">cyan</variable>
  <variable name="sanctuary">white</variable>

  <variable name="levitation">cyan</variable>
  <variable name="haste">silver</variable>

  <variable name="hidden">gray</variable>
  <variable name="shifted">olive</variable>

  <variable name="bracket">darkslategray</variable>


<!-- prompt detection -->

  <variable name="char_name">[a-zA-Z0-9 \-\,\.\']+</variable>

</variables>



<!--  Aliases  -->

<aliases>

  <alias
   match="^meh[ ]+prompt(|[ ]+(?P&lt;status&gt;(on|off)))$"
   enabled="y"
   group="script-prompt"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_prompt("%&lt;status&gt;")
</send>
  </alias>


  <alias
   match="^meh[ ]+tag(|[ ]+(?P&lt;status&gt;(on|off)))$"
   enabled="y"
   group="script-prompt"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_tagged("%&lt;status&gt;")
</send>
  </alias>


<!--  Plugin help  -->

  <alias
   enabled="y"
   match="^meh\_prompt(|( |\:)help)$"
   regexp="y"
   script="OnHelp"
  >
  </alias>

</aliases>



<!--  Triggers  -->

<triggers>

<!-- on first prompt -->

  <trigger
   enabled="y"
   name="first_prompt"
   keep_evaluating="y"
   match="^(|[^ ]+(.*?))(\&lt;(.+)hp (.+)sp (.+)st\&gt;|\(.+\)) $"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>on_first_prompt()
</send>
  </trigger>


<!-- on prompt -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^(\(\[(?P&lt;formhp&gt;[0-9]+)\%\]([ a-zA-Z]+)\)|)(?P&lt;search&gt;(|\[Search\]))(?P&lt;dig&gt;(|\[Dig\]))(?P&lt;music&gt;(|\[o\/\~\]))(?P&lt;away&gt;(|\[AWAY\]))(?P&lt;tag&gt;(|\[TAG\!\]))(?P&lt;mail&gt;(|\[Mail\]))(?P&lt;news&gt;(|\[NEWS\]))(?P&lt;locker&gt;(|\[Locker\]))(?P&lt;track&gt;(|\[T\]))(?P&lt;invis&gt;(|\[\*\]))(|\[SAFE\])(|\[(?P&lt;sextx&gt;[0-9]+)\, (?P&lt;sexty&gt;[0-9]+)\])(?P&lt;spk&gt;(|\[SPK\]))(\&lt;([0-9]+)hp ([0-9]+)sp ([0-9]+)st\&gt;|(?P&lt;other&gt;\((.+)\))) $"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>--here on prompt
trigger_style_runs = TriggerStyleRuns
show_meh_prompt("%&lt;formhp&gt;", "%&lt;search&gt;", "%&lt;dig&gt;", "%&lt;music&gt;", "%&lt;away&gt;", "%&lt;tag&gt;", "%&lt;mail&gt;", "%&lt;news&gt;", "%&lt;locker&gt;", "%&lt;track&gt;", "%&lt;invis&gt;", "%&lt;sextx&gt;", "%&lt;sexty&gt;", "%&lt;spk&gt;", "%&lt;other&gt;")
</send>
  </trigger>


<!-- detect death -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^You have been slain\!|Your disembodied soul rises from your ravaged corpse\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>clear_affects()
</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^The Powers take pity on you and restore your soul to your body\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>clear_affects()
</send>
  </trigger>


<!-- detect guide enabled -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^You are now available for player assistance\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>guide = true</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^\[[0-9]+\] (?P&lt;name&gt;.+) is available for assistance\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (name == "%&lt;name&gt;") then
  guide = true
end
</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^(You are no longer listed as available for player assistance(| \(idle timeout\))|\*\* Thank you for visiting Materia Magica)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>guide = nil</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^\[[0-9]+\] (?P&lt;name&gt;.+) is online\, but not currently available for assistance\.(| \[Away\])$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (name == "%&lt;name&gt;") then
  guide = nil
end
</send>
  </trigger>


<!-- detect sanctuary -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^(You begin glowing with a flickering\, orange\-yellow aura\.|You begin glowing with a bright light\!|Spell\: (sanctuary|fire invocation)[ ]+\- Level[ ]+[0-9]+\, modifies none[ ]+by[ ]+0(| for [0-9]+ minutes)\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>sanctuary = true
</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   expand_variables="y"
   match="^(The white aura surrounding you fades away|The elemental flames surrounding your body wisp into the ether|(@!char_name) has siphoned the spell effect of \'(sanctuary|fire invocation)\' from you)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>sanctuary = nil
</send>
  </trigger>


<!-- detect fireshield -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^(Flames explode around your body\, yet you feel no heat or pain\.|Spell\: (fireshield|magma invocation)[ ]+\- Level[ ]+[0-9]+\, modifies none[ ]+by[ ]+0(| for [0-9]+ minutes)\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fireshield = true
</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   expand_variables="y"
   match="^(Your fireshield sputters and goes out|The flames surrounding you flicker and vanish|(@!char_name) has siphoned the spell effect of \'(sanctuary)|fire invocation\' from you)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>fireshield = nil
</send>
  </trigger>


<!-- detect haste -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^((Y|An electric jolt runs through your body\, and y)ou begin moving much faster\, almost seeming to blur\.|You begin moving rapidly\, as though caught in a sympathetic whirlwind\.|Spell\: (haste|lightning invocation|whirlwind)[ ]+\- Level[ ]+[0-9]+\, modifies (attack\-speed|air\-spell\-prcnt)[ ]+by[ ]+[0-9]+(| for [0-9]+ minutes)\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>haste = true
</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   expand_variables="y"
   match="^(You feel your movements slow to normal|There is a faint blue spark as the electricity speeding you up is discharged|You stop moving as though empowered by a whirlwind|(@!char_name) has siphoned the spell effect of \'(haste|lightning invocation|whirlwind)\' from you)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>haste = nil
</send>
  </trigger>


<!-- detect levitation -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^(Your feet rise(| a few inches) (off the ground|above the surface of the water)\.|Spell\: (levitation|air invocation)[ ]+\- Level[ ]+[0-9]+\, modifies none[ ]+by[ ]+0(| for [0-9]+ minutes)\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>levitation = true
</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   expand_variables="y"
   match="^(You (gently|slowly) settle back (on|)to the ground|(@!char_name) has siphoned the spell effect of \'(levitation|air invocation)\' from you)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>levitation = nil
</send>
  </trigger>


<!-- detect pass door -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^(You turn translucent\.|Your form shimmers and waves\, becoming transluscent\.|Your footsteps grow lighter as you prepare your body to become like the wind\.|Spell\: (pass door|steam invocation|wind walk)[ ]+\- Level[ ]+[0-9]+\, modifies (none|strength)[ ]+by[ ]+(|\-)[0-9]+(| for [0-9]+ minutes)\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>passdoor = true
</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   expand_variables="y"
   match="^(You are no longer translucent|You become more opaque as your steamy form solidifies|The wind rushing through your body gradually slows\, until its presence is gone|(@!char_name) has siphoned the spell effect of \'(pass door|steam invocation|wind walk)\' from you)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>passdoor = nil
</send>
  </trigger>


<!-- detect shifted -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^(You transform into (.+)\!|With the painful feeling of your bones breaking and tendons snapping\, you transform into (.+)\!|Prof\:  shape shifting[ ]+\- Level[ ]+[0-9]+\, modifies none[ ]+by[ ]+0 for [0-9]+ minutes\.|Spell\: polymorph[ ]+\- Level[ ]+[0-9]+\, modifies none[ ]+by[ ]+0(| for [0-9]+ minutes)\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shifted = true
</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   expand_variables="y"
   match="^(You feel normal again\.|Your form reverts to normal\.|You revert back to your normal form\.|You transform back into your original form\.|You begin to have difficulty retaining your altered shape\.\.\.|With a feeling of intense pain and agony\, your body\'s morphic form reasserts itself\.|You have no invisibility skills affecting you|(@!char_name) has siphoned the spell effect of \'polymorph\' from you\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shifted = nil
</send>
  </trigger>


<!-- detect hidden -->

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^(You successfully hide in the shadows\.|Prof\:  hide[ ]+\- Level[ ]+[0-9]+\, modifies none[ ]+by[ ]+0(| for [0-9]+ minutes)\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>hidden = true
</send>
  </trigger>

  <trigger
   enabled="y"
   group="script-prompt"
   keep_evaluating="y"
   match="^You jiggle and move about\, alerting anyone watching to your presence\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>hidden = nil
</send>
  </trigger>

</triggers>



<script>

<![CDATA[

require "wait"
require "gmcphelper"


-----------
-- plugin
-----------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID (), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID (), 1) .. " help")
  Note(" to see info about this plugin --")

  init_stuff()
end


function OnPluginConnect()
  init_stuff()
end


function OnPluginDisconnect()
  clear_affects()
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID (), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo (GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/meh_prompt.xml",
  }
  return (table.concat(t, ";"))
end



------------
-- general
------------

function OnPluginBroadcast(msg, id, name, text)
  if (id =="f67c4339ed0591a5b010d05b") then -- GMCP message
    if (text == "room.info") then -- room packet
      if (not gmcp) then
        gmcp = true
        load_config()
      end

      get_gmcp_room()
      process_room()
    end

  elseif (id =="97784abf5f30629a0d7e7307")
  and (pname == "global_vars") then -- global_vars
    if (msg == 1) and (text == "name") then
      -- name broadcasted
      do_get_name()

    elseif (msg == 1) and (text == "race") then
      -- race broadcasted
      do_get_race()
    end
  end
end


function get_global_var(name)
  local res, val

  res, val = CallPlugin("97784abf5f30629a0d7e7307", "get_global_var", name)

  if (res ~= 0) then
    val = nil
  end

  return val
end



---------------
-- gmcp stuff
---------------

function process_room()
  local flags = gmcpval("flags")

  safe = (has_flag(flags, "safe"))
  lpk = (has_flag(flags, "player-kill-lawful"))
  npk = (has_flag(flags, "player-kill-neutral"))
  cpk = (has_flag(flags, "player-kill-chaotic"))
end


function get_gmcp_room()
  local res, gmcparg = CallPlugin("f67c4339ed0591a5b010d05b", "gmcpval", "room.info")
  luastmt = "gmcpdata = " .. gmcparg

  assert(loadstring(luastmt or ""))()
end


function has_flag(flags, flag)
  return (string.find(flags or "", escaped_str(flag)) ~= nil)
end


function escaped_str(s)
  s = string.gsub(s, "%-", "%%-")
  return s
end



---------
-- name
---------

function init_stuff()
  gmcp = nil
  name = nil
  race = nil
  got_affects = nil

  EnableTrigger("first_prompt", true)
end


function on_first_prompt()
  wait.make(function()
    EnableTrigger("first_prompt", false)

    -- give the plugins time to initialize
    wait.time(3)

    do_get_name()
    do_get_race()
  end)
end


function do_get_name()
  name = get_global_var("name")

  if (name) then
    get_affects()
  end
end


function do_get_race()
  race = get_global_var("race")
end



------------
-- affects
------------

function clear_affects()
  fireshield = nil
  guide = nil
  haste = nil
  hidden = nil
  invis = nil
  levitation = nil
  passdoor = nil
  sanctuary = nil
  shifted = nil
end


function get_affects()
  if (not got_affects) then
    clear_affects()
    Note("-- meh_prompt: sending 'affects' to capture your current affects --")
    Send("affects")
    got_affects = true
  end
end



---------------------
-- config + toggles
---------------------

function load_config()
  prompt = toggle_prompt("on")
  gag_tagged = ((GetVariable("gag_tagged") or "true") == "true")
end


function save_config()
  SetVariable("gag_tagged", tostring(gag_tagged))

  SaveState()
end


function toggle_prompt(status)
  prompt = do_toggle(prompt, status)

  if (prompt) then
    EnableTriggerGroup("script-prompt", true)
    Note("-- meh_prompt ON --")

  else
    EnableTriggerGroup("script-prompt", false)
    Note("-- meh_prompt OFF --")
  end
end


function toggle_tagged(status)
  gag_tagged = do_toggle(gag_tagged, status)

  save_config()

  if (gag_tagged) then
    Note("-- meh_prompt: tag! gagging ON --")

  else
    Note("-- meh_prompt: tag! gagging OFF --")
  end
end


function do_toggle(var, status)
  if (status == "on") then
    var = true
  elseif (status == "off") then
    var = false
  else
    var = not var
  end

  return var
end



---------
-- show
---------

function show_parenthesis(firstchar, lastchar)
  -- this function shows a prompt element, from firstchar to lastchar, given that:
  -- - a particular prompt element may be split across several style runs
  -- - a single style run may contain parts of more than one prompt element
  local start = false

  for k, v in ipairs(trigger_style_runs) do
    local pos = string.find(v.text, firstchar, 0, true)

    if (pos) then
      start = true -- start showing
      txt = string.sub(v.text, pos, string.len(v.text)) -- discard everything before firstchar

    else
      txt = v.text
    end

    if (start) then
      ColourTell(RGBColourToName(v.textcolour),
                 RGBColourToName(v.backcolour),
                 txt)
    end

    pos = string.find(v.text, lastchar, 0, true)

    if (pos) then
      start = false -- end showing
      break
    end
  end -- for each style run
end


function show_meh_prompt(formhp, search, dig, music, away, tag, mail, news, locker, track, invis, sextx, sexty, spk, other)

  function show_bracket(sym)
    ColourTell(GetVariable("bracket"), "black", sym)
  end

  function show_tag(col, sym)
    ColourTell(col, "black", sym)
  end


  if (formhp ~= "") then
    show_parenthesis("(", ")")
  end

  if (guide) then
    ColourTell("teal", "black", "[g]")
  end

  if (search ~= "") then
    ColourTell("lime", "black", "[S]")
  end

  if (dig ~= "") then
    ColourTell("lime", "black", "[D]")
  end

  if (music ~= "") then
    ColourTell("lime", "black", "[M]")
  end

  if (away ~= "") then
    ColourTell("magenta", "black", "[a]")
  end

  if ((tag ~= "") and (not gag_tagged)) then
    ColourTell("red", "black", "[t]")
  end

  if (mail ~= "") then
    ColourTell("red", "black", "[m]")
  end

  if (news ~= "") then
    ColourTell("lime", "black", "[n]")
  end

  if (locker ~= "") then
    ColourTell("yellow", "black", "[locker]")
  end

  if (track ~= "") then
    ColourTell("lime", "black", "[T]")
  end

  if (sanctuary) or (fireshield) or (invis ~= "") or (passdoor) then
    show_bracket("[")

    if (sanctuary) then
      show_tag(GetVariable("sanctuary"), "*")
    end

    if (fireshield) then
      show_tag(GetVariable("fireshield"), "*")
    end

    if (invis ~= "") then
      show_tag(GetVariable("invis"), "*")
    end

    if (passdoor) then
      show_tag(GetVariable("passdoor"), "*")
    end

    show_bracket("]")
  end

  levitation = levitation or (race == "dracon")
  haste = haste or (race == "halfling")

  if (levitation) or (haste) then
    show_bracket("[")

    if (levitation) then
      show_tag(GetVariable("levitation"), "-")
    end

    if (haste) then
      show_tag(GetVariable("haste"), "/")
    end

    show_bracket("]")
  end

  if (shifted) or (hidden) then
    show_bracket("[")

    if (shifted) then
      show_tag(GetVariable("shifted"), "*")
    end

    if (hidden) then
      show_tag(GetVariable("hidden"), "*")
    end

    show_bracket("]")
  end


  if (lpk) then
    ColourTell("olive", "black", "[lpk]")
  elseif (npk) then
    ColourTell("olive", "black", "[npk]")
  elseif (cpk) then
    ColourTell("red", "black", "[cpk]")
  end

  if (safe) then
    ColourTell("white", "black", "[safe]")
  end

  if (sextx ~= "") then
    Tell("[")
    ColourTell("silver", "black", sextx .. ", " .. sexty)
    Note("]")
  end

  if (spk ~= "") then
    ColourTell("red", "black", "[SPK]")
  end

  if (other ~= "") then
    show_parenthesis("(", ")") -- show standard ship/social prompt
  else
    show_parenthesis("<", ">") -- show "normal" vitals
  end

  Note("") -- end of line
end


]]>

</script>

</muclient>
