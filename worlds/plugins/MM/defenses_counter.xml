<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, May 21, 2014, 7:53 AM -->
<!-- MuClient version 4.91 -->

<!-- Plugin "defenses_counter" generated by Plugin Wizard -->

<muclient>

<plugin
   name="defenses_counter"
   author="Ruthgul"
   id="bc15ed541f8f0d068b9cf55f"
   language="Lua"
   purpose="Gathers data about defenses usage, and shows it on demand."
   save_state="y"
   date_written="2014-05-21 07:51:22"
   date_modified="2014-08-04 05:07:10"
   requires="4.71"
   version="1.0"
   >

<description trim="y">

<![CDATA[

.--------------------.
 | defenses_counter |
`--------------------'

Counts the number of times that defenses are used, and shows the results on demand.


** REQUIRES **

- MUSHclient _must_ have write access to its savestates folder (default location = MUSHclient/worlds/plugins/savestates), or we won't be able to save the counters, to resume counting on other sessions.

- Game settings: COMPACT must be OFF (because we anchor end-of-combat-round detection on blank lines).

- Client setting: Game, Configure, Output > [x] Convert IAC EOR/GA to new line (must be checked);
- Client setting: Game, Configure, MXP / Pueblo... > Use MXP / Pueblo: On command (or Yes - always).
These 2 client settings ensure that it will NOT show things to the right of a prompt, which would break some triggers.


** KNOWN ISSUES / LIMITATIONS **

It detects combat rounds by counting the total number of attacks + defenses that happened before a blank line, and checking that it's > 2. So when lag or another issue causes that number to be 2 or lower, the total # of actions for the next round will be higher than it should (will include the previous <= 2 actions round(s).)


Syntax:

* show def totals  - shows the info that it's gathered so far

* reset def totals  - resets all counters to 0

* def totals verbose  - shows totals per round (for debugging purposes, OFF by default)


Author: Ruthgul

]]>

</description>

</plugin>



<!--  Variables  -->

<variables>

  <variable name="char_name">[a-zA-Z0-9 \-\,\.\']+</variable>

  <variable name="ordinal">(first|second|third|fourth|fifth|sixth|seventh|eighth|ninth|tenth)</variable>

</variables>



<!--  Aliases  -->

<aliases>

  <alias
   match="^show def totals$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>show_total_def()
</send>
  </alias>

  <alias
   match="^reset def totals$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>reset_def_totals()
</send>
  </alias>

  <alias
   match="^def totals verbose$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_verbose()
</send>
  </alias>


<!--  Plugin help  -->

  <alias
   enabled="y"
   match="^def(|enses)\_counter(|( |\:)help)$"
   regexp="y"
   script="OnHelp"
  >
  </alias>

</aliases>



<!--  Triggers  -->

<triggers>

<!-- my defenses -->

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^You (.+) (backflip|leap|sidestep|tumble) out of the way of (.+)\'s (|(@!ordinal) )attack\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("you")
inc_total_def("acrobatics")
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^The world goes black for a moment as you teleport a few feet away\, missing (.+)\'s (.+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("you")
inc_total_def("combat blink")
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^You dodge out of the way of (.+)\'s (|(@!ordinal) )attack\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("you")
inc_total_def("dodge")
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^You are obscured by a swirling cloud of dust\, causing (.+) to miss (.+) attack\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("you")
inc_total_def("dust invocation")
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^You slip between planes for a moment\, evading (.+)\'s (|(@!ordinal) )attack\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("you")
inc_total_def("magical fade")
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^You skillfully parry (.+)\'s (|(@!ordinal) )attack\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("you")
inc_total_def("parry")
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^You catch (.+) on (.+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("you")
inc_total_def("shield block")
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^The telekinetic shield protecting you moves quickly\, intercepting (.+)\'s (.+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("you")
inc_total_def("telekinetic shield")
</send>
  </trigger>


<!-- other round stuff, required to detect end of combat round -->

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) fails to hit (?P&lt;target&gt;.+) with (.+) attack\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>--inc_enemy_attacks("%&lt;target&gt;")
inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="(@!char_name)\'s (|(@!ordinal) )attack didn\'t seem to have any effect on (?P&lt;target&gt;.+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("%&lt;target&gt;")
inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(?P&lt;target&gt;(@!char_name)) (is|are) (.+) on the (.+) (by|with) (.+)\'s (.+) causing (.+) damage\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_enemy_attacks("%&lt;target&gt;")
inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) (.+) (backflips|leaps|sidesteps|tumbles) out of the way of (your (|(@!ordinal) )attack|(.+)\'s (.+))\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) disappears with a BANG and reappears a few feet away\, out of the range of (your|(.+)\'s) (.+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) dodges out of the way of (your (|(@!ordinal) )attack|(.+)\'s (.+))\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) is obscured by a swirling cloud of dust\, causing (.+) to miss (.+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) phases out of existence\, evading (your (|(@!ordinal) )attack|(.+)\'s (.+))\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) parries (your (|(@!ordinal) )attack|(.+)\'s (.+))\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) catches (.+) on (.+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^A disc of solidifed air in front of (.+) moves quickly\, intercepting (your (.+)|(.+)\'s (.+))\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^You fail to hit (.+) with your (|(@!ordinal) )attack\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) is unaffected by your (.+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^Your (|(@!ordinal) )attack didn\'t seem to have any effect on (.+)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^[a-zA-Z \-\,\' ]+ is not usable (at|from) your current formation position\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   expand_variables="y"
   match="^(@!char_name) is (.+) on the (.+) with your (.+) causing (.+) damage\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>inc_total_actions()
</send>
  </trigger>



<!-- end of combat round -->

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>check_if_end_of_round()
</send>
  </trigger>

</triggers>



<!--  Scripts  -->

<script>

<![CDATA[

require "serialize"

fg_col = "dodgerblue"
bg_col = "black"


-----------
-- plugin
-----------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID(), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID(), 1) .. " help")
  Note(" to see info about this plugin --")

  init_global_data()
  load_data()
  load_config()
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID(), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo(GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/defenses_counter.xml",
  }
  return (table.concat(t, ";"))
end



------------------
-- init & config
------------------

function init_global_data()
  total_def = {}
  total_rounds = 0
  total_rounds_with_more_than_one_attack_vs_me = 0

  init_round_data()
end


function init_round_data()
  round_def = 0
  actions_this_round = 0
  attacks_vs_me_this_round = 0
end


function reset_def_totals()
  init_global_data()

  ColourNote(fg_col, bg_col, "All counters resetted to 0")
end


function toggle_verbose()
  verbose = not verbose

  save_config()

  if (verbose) then
    ColourNote(fg_col, bg_col, "defenses_counter: verbose mode ON")
  else
    ColourNote(fg_col, bg_col, "defenses_counter: verbose mode OFF")
  end
end



----------------
-- save & load
----------------

function save_data()
  if (total_rounds > 0) then
    SetVariable("total_def", "total_def = " .. serialize.save_simple(total_def))
    SetVariable("total_rounds", total_rounds)

    SaveState()
  end
end


function load_data()
  assert(loadstring(GetVariable("total_def") or ""))()

  total_rounds = GetVariable("total_rounds") or 0
end


function save_config()
  SetVariable("def_totals_verbose", tostring(verbose))
  SaveState()
end


function load_config()
  verbose = ((GetVariable("def_totals_verbose") or "false") == "true")
end



------------------
-- count actions
------------------

function inc_total_def(type)
  if (not total_def[type]) then
    total_def[type] = 1
  else
    total_def[type] = total_def[type] + 1
  end

  if (type ~= "second defense") then
    inc_round_def()
    inc_total_actions()
  end
end


function inc_enemy_attacks(target)
  if (string.lower(target) == "you") then
    attacks_vs_me_this_round = attacks_vs_me_this_round + 1
  end
end


function inc_total_rounds_with_more_than_one_attack_vs_me()
  total_rounds_with_more_than_one_attack_vs_me = total_rounds_with_more_than_one_attack_vs_me + 1
end


function inc_round_def()
  round_def = round_def + 1
end


function inc_total_actions()
  actions_this_round = actions_this_round + 1
end


function inc_total_rounds()
  total_rounds = total_rounds + 1
end



-----------------
-- end of round
-----------------

function check_if_end_of_round()
  if (actions_this_round > 2) then
    process_end_of_round()
  end
end


function process_end_of_round()
  inc_total_rounds()

  if (attacks_vs_me_this_round > 1) then
    inc_total_rounds_with_more_than_one_attack_vs_me()
  end

  if (round_def > 1) then
    inc_total_def("second defense")

    if (verbose) then
      ColourNote(fg_col, bg_col, "second defense triggered this round")
    end
  end

  save_data()

  if (verbose) then
    show_round_totals()
  end

  init_round_data()
end



------------------
-- show counters
------------------

function show_total_def()
  defenses_list = { "acrobatics", "dodge", "magical fade", "parry", "shield block", "combat blink", "dust invocation", "telekinetic shield", "second defense" }

  ColourNote(fg_col, bg_col, "Total rounds: " .. total_rounds)
  ColourNote(fg_col, bg_col, "Total rounds with more than 1 non-failed attack against me: " .. total_rounds_with_more_than_one_attack_vs_me)
  ColourNote(fg_col, bg_col, "Total defenses used: ")

  for i = 1, #defenses_list do
    ColourNote(fg_col, bg_col, defenses_list[i] .. ": " .. (total_def[defenses_list[i]] or 0))
  end
end


function show_round_totals()
  ColourNote(fg_col, bg_col, "this round  >>  my # of defenses: " .. round_def .. "  -  total # of non-failed attacks vs me: " .. attacks_vs_me_this_round .. "  -  total # of actions: " .. actions_this_round)
end


]]>

</script>

</muclient>
