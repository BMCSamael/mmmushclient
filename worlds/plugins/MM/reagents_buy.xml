<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, April 27, 2012, 12:20 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "reagents_buy" generated by Plugin Wizard -->

<muclient>
<plugin
   name="reagents_buy"
   author="Ruthgul"
   id="bb2a97fe72b34a0cd5135bcf"
   language="Lua"
   purpose="automates buying reagents"
   date_written="2012-04-27 12:19:50"
   date_modified="2014-04-11 09:09:48"
   requires="4.71"
   version="1.0"
   >

<description trim="y">

<![CDATA[

.----------------.
 | reagents_buy |
`----------------'

Automats buying reagents.

** REQUIRES **

- MM_GMCP_Handler (plugin id="f67c4339ed0591a5b010d05b") must be installed and enabled.
- detect_globals (plugin id="d900cb999816b1f6f2d4bdc5") must be installed and enabled.
- global_vars (plugin id="97784abf5f30629a0d7e7307") must be installed and enabled.
- generic_buy (plugin id="a326b480b3f02b3ff6d58e7d") must be installed and enabled.
- MUSHclient must have write access to its plugins/state folder.
- Game setting: SHOW-NPC-TITLES must be ON.


Syntax:

> To choose containers for your regents:

* container {fire|water|air|earth|eth|gem} <container_name>  - chooses an individual container for a specific reag type (eg: container fire firereagents)

* container ALL <container_name>  - chooses a single container for all reagents (eg: container ALL cloud)


> To buy reagents:

* reags buy {fire|water|air|earth|eth|gem}  - buys the specified reagent type to fill the chosen container for that type (eg: reags buy fire)

* reags buy ALL  - buys equal numbers of all available reagent types, to fill the chosen single container


> To toggle hints for shops on/off:

* reags show hints [on|off]  - on by default


Author: Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Triggers  -->

<triggers>

<!-- on first prompt -->

  <trigger
   enabled="y"
   name="first_prompt"
   keep_evaluating="y"
   match="^(|[^ ]+(.*?))(\&lt;(.+)hp (.+)sp (.+)st\&gt;|\(.+\)|\&gt;) $"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>on_first_prompt()
</send>
  </trigger>


<!-- detect shop -->

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^\([\-]+(|\*Forested\*)[\-]+\)[ ]+(.+)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_reset()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] (A chubby halfling blabbers on almost incoherently about a sale|A conjurer is here\, trying to make small items|A good\-natured gnome tends to his shop here|A small man looks up at you from reading|A wizened old man is here\, eyeing you suspiciously|Arball is selling magical supplies here|Hocus\, the fey witch\, stands behind a counter selling magical components|Stifling a yawn\, the shopkeeper stands reading a large magical tome|The attendant waits patiently for a customer to ask for help|The owner of the Enchanted Tiki magic shop is here selling goods|Varlov looks at you quizzically as you enter his shop|Vegas is here selling magical items|An outlawed sorcerer lurks in the corner)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_generic()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] A haggard\-looking beachcomber with hand\-stitched clothing stands here grinning\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_aequtus()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] A serpent alchemist is here\, performing an arcane ritual\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_arcane()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] Marie\'s Shop of Wonders\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_atlantis()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] An ancient witch doctor squats in the corner concocting a brew\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_hotel_hello()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] A strange looking man glares at you with an inqusitive look on his face\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_irda()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] Devon the pharmicist is here\, mixing potions\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_lasler()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] A magical being of energy hovers above the floor silently\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_maldra()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] Rilly looks at you with thinly veiled impatience\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_naulitas()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] A thin\, frail elf in green druid\'s robes is here\, sorting various plants and herbs\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_new_kolvir()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] Jeria\, the beautiful white crane shopkeeper is here\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_rune_forest_1()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] A half\-elf monk is here\, selling reagents\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_rune_forest_2()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] A beautiful woman turns her warm gaze upon you\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_sigil()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] An old woman stands behind the counter awaiting your business\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_templeton1()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] A short human with narrow features and high cheekbones is here\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_templeton2()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] A robed dracon holding an assortment of wands looks through his inventory\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_vir()
</send>
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(|\((Red|Gold) Aura\) )(|[\*]+|[\[FILST\]]+)\[Shop\] An old sage sits here counting the coins he\'s earned\.$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>shop_xaventry()
</send>
  </trigger>

</triggers>



<!--  Aliases  -->

<aliases>

  <alias
   enabled="y"
   match="^reags[ ]+show[ ]+hints(|[ ]+(?P&lt;status&gt;(on|off)))$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_hints("%&lt;status&gt;")
</send>
  </alias>

  <alias
   enabled="y"
   match="^container[ ]+(?P&lt;item&gt;([a-zA-Z]+))[ ]+(?P&lt;cont&gt;.+)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (name) then
  choose_container("%&lt;item&gt;", "%&lt;cont&gt;")
else
  plugin_not_initialized()
end
</send>
  </alias>

  <alias
   enabled="y"
   match="^reags[ ]+buy[ ]+(?P&lt;type&gt;.+)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>if (name) then
  buy_reags("%&lt;type&gt;")
else
  plugin_not_initialized()
end
</send>
  </alias>


<!--  Plugin help  -->

  <alias
   enabled="y"
   script="OnHelp"
   match="^reagents_buy(|( |\:)help)$"
   regexp="y"
  >
  </alias>
</aliases>



<!--  Scripts  -->

<script>

<![CDATA[

require "wait"


-----------
-- plugin
-----------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID (), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID (), 1) .. " help")
  Note(" to see info about this plugin --")

  available = {}

  load_config()

  EnableTrigger("first_prompt", true)
  name = nil
end


function OnPluginConnect()
  EnableTrigger("first_prompt", true)
  name = nil
end


function plugin_not_initialized()
  Note("-- " .. GetPluginInfo(GetPluginID (), 1) .. ": plugin initialization unfinished --")
  Note("please wait 5 seconds and try again")
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID (), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo (GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/reagents_buy.xml",
  }
  return (table.concat(t, ";"))
end



------------
-- general
------------

function get_global_var(name)
  local res, val

  res, val = CallPlugin("97784abf5f30629a0d7e7307", "get_global_var", name)

  if (res ~= 0) then
    val = nil
  end

  return val
end



---------
-- name
---------

function on_first_prompt()
  wait.make(function()
    EnableTrigger("first_prompt", false)

    -- give the plugins time to initialize
    wait.time(3)

    do_get_name()
  end)
end


function OnPluginBroadcast(msg, id, pname, text)
  if (id =="97784abf5f30629a0d7e7307")
  and (pname == "global_vars") then -- global_vars
    if (msg == 1) and (text == "name") then
      -- name broadcasted
      do_get_name()
    end
  end
end


function do_get_name()
  name = get_global_var("name")

  if (name) then
    got_name()
  end
end


function got_name()
  EnableAliasGroup("aliases", true)
end



----------
-- shops
----------

function show_hint(sells, sells_hints, also_sells, also_sells_notes)
  if (show_hints) then
    Tell("buy reags: ")
    ColourTell("silver", "black", sells)
    if (sells_hints ~= "") then
      Note(", but " .. sells_hints)
    else
      Note("")
    end

    if (also_sells ~= "") then
      Tell("also sells: ")
      ColourTell("silver", "black", also_sells)
      Note(", but " .. also_sells_notes)
    end
  end
end


function shop_reset()
  available = {}
end


function shop_generic()
  available["fire"] = "sulfur"
  available["water"] = "scale"
  available["air"] = "feather"
  available["earth"] = "leaf"
  available["eth"] = "sunstone"
  available["gem"] = "runestone"
  show_hint("fire water air earth", "", "ethereal gem", "they're heavy")
end


function shop_aequtus()
  available["fire"] = "volcanic"
  available["water"] = "scale"
  available["air"] = "feather"
  available["earth"] = "seashell"
  available["eth"] = nil
  available["gem"] = nil
  show_hint("water air", "", "fire earth", "they're heavy")
end


function shop_arcane()
  available["fire"] = "ash"
  available["water"] = nil
  available["air"] = "feather"
  available["earth"] = "heart"
  available["eth"] = "soul"
  available["gem"] = nil
  show_hint("fire earth ethereal", "", "air", "they're heavy")
end


function shop_atlantis()
  available["fire"] = "volcanic"
  available["water"] = "tear"
  available["air"] = "bubbles"
  available["earth"] = "seashell"
  available["eth"] = "sunstone"
  available["gem"] = "runestone"
  show_hint("-", "", "fire water air earth ethereal gem", "they're heavy")
end


function shop_hotel_hello()
  available["fire"] = "stick"
  available["water"] = "egg"
  available["air"] = "husk"
  available["earth"] = "frond"
  available["eth"] = "bolt"
  available["gem"] = "diamond"
  show_hint("-", "", "fire water air earth ethereal gem", "they're heavy")
end


function shop_irda()
  available["fire"] = "gizzard"
  available["water"] = "rose"
  available["air"] = "cloud"
  available["earth"] = "leaf"
  available["eth"] = "sunstone"
  available["gem"] = "gem"
  show_hint("earth", "", "fire water air ethereal gem", "they're heavy")
end


function shop_lasler()
  available["fire"] = "foxfire"
  available["water"] = "salt"
  available["air"] = "fog"
  available["earth"] = "flower"
  available["eth"] = nil
  available["gem"] = nil
  show_hint("fire water air", "", "earth", "they're heavy")
end


function shop_maldra()
  available["fire"] = "volcanic"
  available["water"] = "monkey"
  available["air"] = "neon"
  available["earth"] = "innards"
  available["eth"] = "ghost"
  available["gem"] = nil
  show_hint("ethereal", "", "fire water air earth", "they're heavy")
end


function shop_naulitas()
  available["fire"] = "magma"
  available["water"] = "ocean"
  available["air"] = "bubble"
  available["earth"] = "salt"
  available["eth"] = nil
  available["gem"] = nil
  show_hint("air", "they're expensive", "fire water earth", "they're heavy")
end


function shop_new_kolvir()
  available["fire"] = "ember"
  available["water"] = "kelp"
  available["air"] = "cattail"
  available["earth"] = "pebble"
  available["eth"] = "scale"
  available["gem"] = "splinter"
  show_hint("ethereal gem", "", "fire water air earth", "they're expensive")
end


function shop_rune_forest_1()
  available["fire"] = "sulfur"
  available["water"] = nil
  available["air"] = "feather"
  available["earth"] = "bark"
  available["eth"] = nil
  available["gem"] = nil
  show_hint("fire air earth", "", "", "")
end


function shop_rune_forest_2()
  available["fire"] = "tooth"
  available["water"] = "eye"
  available["air"] = "egg"
  available["earth"] = nil
  available["eth"] = "horn"
  available["gem"] = nil
  show_hint("-", "", "fire water air ethereal", "they're heavy")
end


function shop_sigil()
  available["fire"] = "sulfur"
  available["water"] = "scale"
  available["air"] = "feather"
  available["earth"] = "leaves"
  available["eth"] = "sunstone"
  available["gem"] = "seed"
  show_hint("fire water air earth gem", "", "ethereal", "they're heavy")
end


function shop_templeton1()
  available["fire"] = "firepowder"
  available["water"] = nil
  available["air"] = nil
  available["earth"] = "leaf"
  available["eth"] = "stone"
  available["gem"] = "opal"
  show_hint("-", "", "fire earth ethereal gem", "they're heavy")
end


function shop_templeton2()
  available["fire"] = nil
  available["water"] = "eye"
  available["air"] = "egg"
  available["earth"] = nil
  available["eth"] = nil
  available["gem"] = nil
  show_hint("-", "", "water air", "they're heavy and expensive")
end


function shop_vir()
  available["fire"] = "branch"
  available["water"] = "guppy"
  available["air"] = "wing"
  available["earth"] = "fungus"
  available["eth"] = "essence"
  available["gem"] = "seed"
  show_hint("ethereal gem", "gem are cheaper in Sigil", "fire water air earth", "they're heavy")
end


function shop_xaventry()
  available["fire"] = "brick"
  available["water"] = "seaweed"
  available["air"] = "sylph"
  available["earth"] = "quartz"
  available["eth"] = "sapphire"
  available["gem"] = "diamond"
  show_hint("-", "", "fire water air earth ethereal gem", "they're heavy and expensive")
end



---------------
-- containers
---------------

function choose_container(item, container)
  if ((item == "fire")
  or (item == "water")
  or (item == "air")
  or (item == "earth")
  or (item == "eth")
  or (item == "gem")
  or (item == "ALL")) then
    SetVariable(name .. "_" .. item .. "_cont", container)
    SaveState()

    Tell("-- reagents_buy: container for ")
    ColourTell("silver", "black", item)
    Tell(" reagents set to: '")
    ColourTell("silver", "black", container)
    Note("' --")

--spam-me-not :x
--  elseif (show_hints) then
--    Tell("-- reagents_buy: to specify a container, use '")
--    ColourTell("silver", "black", "container {fire|water|air|earth|eth|gem|ALL} <container_name>")
--    Note("' --")
  end
end



--------
-- buy
--------

function available_reags()
  local res = ""

  for key, val in pairs (available) do
    res = res .. " " .. val
  end

  return res
end


function buy_all_reags()
  -- will buy equal numbers of the all available reagents, to fill the container
  local container = GetVariable(name .. "_ALL_cont")
  if (container) then
    local to_buy = available_reags()
    if (to_buy ~= "") then
      Execute("blistfill" .. " " .. to_buy .. " " .. container)

    else
      Note("-- reagents_buy - error: no reagents available at the current location --")
    end

  else
    Note("-- reagents_buy - error: you haven't specified a container for ALL reagents! --")
    Tell("to specify a container, use '")
    ColourTell("silver", "black", "container ALL <container_name>")
    Note("'")
  end
end


function buy_specific_reags(type)
  local container = GetVariable(name .. "_" .. type .. "_cont")
  if (container) then
    local to_buy = available[type]
    if (to_buy) then
      Execute("bfill" .. " " .. to_buy .. " " .. container)

    else
      Note("-- reagents_buy - error: no " .. type .. " reagents available at the current location --")
    end

  else
    Note("-- reagents_buy - error: you haven't specified a container for " .. type .. " reagents! --")
    Tell("to specify a container, use '")
    ColourTell("silver", "black", "container " .. type .. " <container_name>")
    Note("'")
  end
end


function buy_reags(type)
  if (IsPluginInstalled ("a326b480b3f02b3ff6d58e7d")) then -- generic_buy is installed
    if (GetPluginInfo("a326b480b3f02b3ff6d58e7d", 17)) then -- generic_buy is enabled
      if (type == "ALL") then
        buy_all_reags()

      elseif ((type == "fire")
      or (type == "water")
      or (type == "air")
      or (type == "earth")
      or (type == "eth")
      or (type == "gem")) then
        buy_specific_reags(type)

--spam-me-not :x
--      elseif ((type ~= "usage") and (show_hints)) then
--        Tell("-- reagents_buy: to buy reagents, use '")
--        ColourTell("silver", "black", "reags {fire|water|air|earth|eth|gem|ALL}")
--        Note("' --")
      end

    else -- generic_buy is NOT enabled
      Note("-- reagents_buy - error: generic_buy (plugin id='a326b480b3f02b3ff6d58e7d') is NOT enabled! --")
    end

  else -- generic_buy is NOT installed
    Note("-- reagents_buy - error: generic_buy (plugin id='a326b480b3f02b3ff6d58e7d') is NOT installed! --")
  end
end



----------
-- hints
----------

function toggle_hints(state)
  if (state == "") then
    show_hints = not show_hints

  elseif (state == "on") then
    show_hints = true

  elseif (state == "off") then
    show_hints = false
  end

  save_config()

  if (show_hints) then
    Note("-- reagents_buy: will now show hints for shops --")
  else
    Note("-- reagents_buy: no longer showing hints for shops --")
  end
end


function load_config()
  show_hints = ((GetVariable("show_hints") or "true") == "true")
end


function save_config()
  SetVariable("show_hints", tostring(show_hints))

  SaveState()
end


]]>

</script>

</muclient>
