<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Sunday, April 22, 2012, 4:47 PM -->
<!-- MuClient version 4.81 -->

<!-- Plugin "terrain_o_vision" generated by Plugin Wizard -->

<muclient>

<plugin
   name="terrain_o_vision"
   author="Elbereth, Ruthgul"
   id="d81aeca9c0a10f0270dfe0f4"
   language="Lua"
   purpose="Displays terrain information next to the compass"
   save_state="y"
   date_written="2012-04-22 17:59:23"
   date_modified="2014-11-06 10:33:06"
   requires="4.71"
   version="1.0"
>

<description trim="y">

<![CDATA[

.--------------------.
 | Terrain-O-Vision |
`--------------------'

Shows terrain information in the line below room name.


** REQUIRES **

- MM_GMCP_Handler (plugin id="f67c4339ed0591a5b010d05b") must be installed and enabled to see terraininfo. (If it isn't, and you choose terrain mode, the scripts will auto-disable.)
- Game setting: COMPASS must be ON.


Syntax:

* terrain terrain  - to see terrain information, and hide the *Forested* tag

* terrain nothing  - to hide the *Forested* tag (for [half-]elves), and disable terrain information

* terrain normal  - to disable scripts (see lines unchanged)


Authors: Elbereth and Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Triggers  -->

<triggers>

  <trigger
    enabled="y"
    name="normalline"
    keep_evaluating="y"
    match="^\([\-]+\)[ ]+(.+)$"
    regexp="y"
    omit_from_output="y"
    send_to="14"
    sequence="100"
  >
    <send>
      trigger_style_runs = TriggerStyleRuns
      show_terrain_line(1)
    </send>
  </trigger>


  <trigger
    enabled="y"
    name="forestedline"
    keep_evaluating="y"
    match="^\([\-]+\*Forested\*[\-]+\)[ ]+(.+)$"
    regexp="y"
    omit_from_output="y"
    send_to="14"
    sequence="100"
  >
    <send>
      trigger_style_runs = TriggerStyleRuns
      show_line(3)
    </send>
  </trigger>

</triggers>



<!--  Aliases  -->

<aliases>

  <alias
    match="^terrain (?P&lt;mode&gt;(terrain|nothing|normal))$"
    enabled="y"
    regexp="y"
    send_to="12"
    sequence="100"
  >
    <send>
      choose_mode("%&lt;mode&gt;")
    </send>
  </alias>


<!--  Plugin help  -->

  <alias
    script="OnHelp"
    match="^terrain(|\_o\_vision)(|( |\:)help)$"
    regexp="y"
    enabled="y"
  >
  </alias>

</aliases>



<script>

<![CDATA[

require "gmcphelper"


------------
-- general
------------

mode = "terrain" -- default


function choose_mode(mymode)
  mode = mymode
  if (mode == "terrain") then
    EnableTrigger("normalline", true)
    EnableTrigger("forestedline", true)
    Note("-- Terrain-O-Vision: showing terrain info, hiding *Forested* tag --")

  elseif (mode == "nothing") then
    EnableTrigger("normalline", false)
    EnableTrigger("forestedline", true)
    Note("-- Terrain-O-Vision: hiding the *Forested* tag (if applicable) --")

  elseif (mode == "normal") then
    EnableTrigger("normalline", false)
    EnableTrigger("forestedline", false)
    Note("-- Terrain-O-Vision: scripts disabled (showing lines unchanged) --")
  end

  got_gmcp_data = false
end


----------------
-- gmcp plugin
----------------

function OnPluginBroadcast(msg, id, name, text)
  if (id =="f67c4339ed0591a5b010d05b") then -- GMCP message
    if (text == "room.info") then -- room.info
      get_gmcp_room()

      got_gmcp_data = true
      -- using this variable to figure out if we received updated gmcp room.info,
      -- which happens when we enter a room, or when we look at the current room
      -- (as opposed to looking in a direction, or televiewing a room,
      --  which won't yield update gmcp room.info)
    end
  end
end


function get_gmcp_room()
  local res, gmcparg = CallPlugin("f67c4339ed0591a5b010d05b", "gmcpval", "room.info")
  luastmt = "gmcpdata = " .. gmcparg

  assert(loadstring(luastmt or ""))()
end



-----------------------------
-- multi-purpose show stuff
-----------------------------

function show_line(starting_run)
  if (mode == "terrain") then
    show_terrain_line(3)
  else
    show_empty_line(3)
  end
end


function show_rest_of_starting_run(starting_run)
  -- where "first" can be:
  -- #1 for non-[half-]elves, or [half-]elves in non-forested rooms
  -- #3 for [half-]elves in forested rooms

  local runtext = trigger_style_runs[starting_run].text
  local rest_of_run_1 = string.sub(runtext, string.find(runtext, " "), string.len(runtext))

  ColourTell(RGBColourToName(trigger_style_runs[starting_run].textcolour),
             RGBColourToName(trigger_style_runs[starting_run].backcolour),
             rest_of_run_1)
end


function show_remaining_runs(numstyles, starting_run)
  for i = starting_run + 1, numstyles do
    ColourTell(RGBColourToName(trigger_style_runs[i].textcolour),
               RGBColourToName(trigger_style_runs[i].backcolour),
               trigger_style_runs[i].text)
  end

  Note("") -- end of line
end


--------------------------------------------
-- gagging *Forested* tag for [half-]elves
--------------------------------------------

function show_empty_line(starting_run)
  -- gagging the *Forested* tag

  ColourTell(RGBColourToName(trigger_style_runs[1].textcolour),
             RGBColourToName(trigger_style_runs[1].backcolour),
             "(-------------------------------------------------)")

  show_rest_of_starting_run(starting_run)

  local numstyles = #trigger_style_runs
  show_remaining_runs(numstyles, starting_run)
end


------------------------------------------
-- reworking a line to show terrain info
------------------------------------------

function show_terrain_line(starting_run)
  -- showing terrain information

  local showed_partial = nil

  if (got_gmcp_data) then -- we received gmcp room.info
    local terraininfo = gmcpval("terraininfo")

    if (terraininfo) then -- GMCP plugin installed
      show_terrain_in_line(terraininfo)
      got_gmcp_data = false
      showed_partial = true

    else -- GMCP plugin not installed
      show_original_line() -- because we gagged it!
      showed_partial = false

      choose_mode("normal") -- disable scripts
    end

  else -- we didn't get gmcp room.info (eg, we looked north, etc.)
    show_terrain_in_line("?") -- we show ? instead
    showed_partial = true
  end

  if (showed_partial) then -- gotta show the rest of the line
    show_rest_of_starting_run(starting_run)

    local numstyles = #trigger_style_runs
    show_remaining_runs(numstyles, starting_run)
  end
end


function show_terrain_in_line(terraininfo)
  -- show (-----------------------------------terraininfo---)

  terraininfo = shorten_terraintypes(terraininfo)

  local firstpart = string.rep("-", 46 - string.len(terraininfo))

  ColourTell(RGBColourToName(trigger_style_runs[1].textcolour),
             RGBColourToName(trigger_style_runs[1].backcolour),
             "(" .. firstpart)

  ColourTell("silver",
             RGBColourToName(trigger_style_runs[1].backcolour),
             terraininfo)

  ColourTell(RGBColourToName(trigger_style_runs[1].textcolour),
             RGBColourToName(trigger_style_runs[1].backcolour),
             "---)")
end


function shorten_terraintypes(terraininfo)
  -- we abridge certain terrain types,
  -- so the total length of terraininfo won't exceed 46 characters

  new_ti = string.gsub(terraininfo, "diggable", "dig")
  new_ti = string.gsub(new_ti, "swimmable", "swim")
  new_ti = string.gsub(new_ti, "able", "")
  new_ti = string.gsub(new_ti, "freezing", "freeze")
  new_ti = string.gsub(new_ti, "-gas", "")
  return new_ti
end


------------------------------------
-- showing original line as it was
------------------------------------

function show_original_line()
  for i = 1, #trigger_style_runs do
    ColourTell(RGBColourToName(trigger_style_runs[i].textcolour),
               RGBColourToName(trigger_style_runs[i].backcolour),
               trigger_style_runs[i].text)
  end

  Note("")
end


-----------------
-- plugin stuff
-----------------

function OnPluginInstall()
  got_gmcp_data = false
  Tell("-- Terrain-O-Vision - type: ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID (), 1) .. " help")
  Note(" to see information about this plugin --")
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID (), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo (GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/terrain_o_vision.xml",
  }
  return (table.concat(t, ";"))
end

]]>

</script>

</muclient>
