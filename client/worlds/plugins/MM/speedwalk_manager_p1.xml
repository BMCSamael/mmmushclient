<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, August 01, 2013, 9:28 AM -->
<!-- MuClient version 4.90 -->

<!-- Plugin "speedwalk_manager_p1" generated by Plugin Wizard -->

<muclient>

<plugin
   name="speedwalk_manager_p1"
   author="Ruthgul"
   id="632048f8236c5a1319306ff6"
   language="Lua"
   purpose="handles client speedwalks to prevent spam/disconnections"
   date_written="2011-01-03 03:11:24"
   date_modified="2013-08-01 12:02:29"
   requires="4.71"
   version="1.0"
   >

<description trim="y">

<![CDATA[

.------------------------.
 | speedwalk_manager_p1 |
`------------------------'

It sends a speedwalk to the MUD, 100 directions at a time (to prevent spam / disconnections).


** REQUIRES **

- MM_GMCP_Mapper_GMCP (plugin id="f973af093e715dece34dc25f") must be installed an enabled to use the 'spd1 <room#>' command. You'll need an updated version of the Mapper (aug 2013 or newer.)


Syntax:

* spd1 <speedwalk>  - runs a speedwalk, if it's valid (eg, spd1 3(ne)3s3w)

* spd1 #<room#>  - tries to find a path to the room with that GMCP number, and if successful, it runs you there (eg, spd1 #10456)

* spd1 abort  - cancels a speedwalk (NOTE it will only stop once it's done running the current speedwalk chunk)


Edit the variables delay and chunk to change the speedwalk delay (default = 10) and number of directions sent to the MUD per chunk (default = 100).


Author: Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Variables  -->

<variables>

<!-- edit this variable to change the speedwalk delay -->
  <variable name="delay">10</variable>

<!-- edit this variable to change the speedwalk chunk size -->
  <variable name="chunk">100</variable>

</variables>



<!--  Aliases  -->

<aliases>

  <alias
   match="^spd1[ ]+(?P&lt;param&gt;([0-9A-Za-z \(\)]+))$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>speedwalk("%&lt;param&gt;")
</send>
  </alias>

  <alias
   match="^spd1[ ]+\#(?P&lt;num&gt;([0-9]+))$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>find_path("%&lt;num&gt;")
</send>
  </alias>


<!--  Plugin help  -->

  <alias
   script="OnHelp"
   match="^speedwalk\_manager_p1(|( |\:)help)$"
   enabled="y"
   regexp="y"
  >
  </alias>

</aliases>



<!--  Triggers  -->

<triggers>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(A swirling vortex of sound and energy envelops you|You hear a peal of thunder from afar\.\.)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
   script="abort_speedwalk"
  >
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^Not while you are in combat\.$"
   regexp="y"
   send_to="12"
   sequence="100"
   script="abort_speedwalk"
  >
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^Not while you are in combat\.$"
   regexp="y"
   send_to="12"
   sequence="100"
   script="abort_speedwalk"
  >
  </trigger>

  <trigger
   enabled="y"
   keep_evaluating="y"
   match="^(You cannot move in that direction|You would surely need a grappling hook to move there|You can\'t go there while mounted|You need a sailing vessel to go there|The water current is too swift and turbulent for you to cross|You would need a sailing vessel or some form of levitation to go there|The water current is too swift and turbulent for your mount to cross|You would need a water\-breathing mount to go there mounted|(.+): (It\'s|They\'re) locked|The (.+) (is|are) closed|A strange force blocks your passage|Lucinda\'s store is closed\; you shouldn\'t try to break in)\.$"
   regexp="y"
   send_to="12"
   sequence="100"
   script = "obstacle_found"
  >
  </trigger>

  <trigger
   name="wait_for_where"
   keep_evaluating="y"
   match="^(Visible player\(s\) near you\:|You will be able to check for nearby players again in (.+) second(|s)\.)$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>where_detected()
</send>
  </trigger>

</triggers>



<!--  Scripts  -->

<script>

<![CDATA[

require "wait"


-----------------
-- plugin stuff
-----------------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID (), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID (), 1) .. " help")
  Note(" to see the list of available commands --")

  init_stuff()
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID (), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo (GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/speedwalk_manager_p1.xml",
  }
  return (table.concat(t, ";"))
end



---------------
-- find paths
---------------

function find_path(room_num)
  local spd = map_path(room_num)

  if (spd) then
    evaluate_speedwalk(spd)
  end
end


function map_path(dest)
  -- calls a function in MM_GMCP_Mapper_GMCP

  local res, val

  res, val = CallPlugin("f973af093e715dece34dc25f", "map_path", dest)

  if (res ~= 0) then
    val = nil
  end

  return val
end



---------------------
-- speedwalks stuff
---------------------

function init_stuff()
  EnableTrigger("wait_for_where", false)

  speeding = false
  abort = false
  waiting = false
  starttime = nil
end


function speedwalk(params)
  if (string.lower(params) == "abort") then
    abort_speedwalk()

  else
    evaluate_speedwalk(params)
  end
end


function evaluate_speedwalk(spd)
  local aux = EvaluateSpeedwalk(spd)

  if (string.find(aux, "*") == 1) then
    Note("-- speedwalk_manager_p1 - speedwalk evaluation error --")

  else
    do_speedwalk(aux)
  end
end


shortdir = {
  ["north"] = "N",
  ["east"]  = "E",
  ["south"] = "S",
  ["west"]  = "W",
  ["up"]    = "U",
  ["down"]  = "D",
}


function do_speedwalk(spd)
  wait.make(function()

    if (not speeding) then
      local delay = tonumber(GetVariable("delay"))
      SetSpeedWalkDelay(delay)

      local chunk = tonumber(GetVariable("chunk"))

      local aux = string.gsub(spd, "\r\n", "|")
      local t = utils.split(aux, "|")

      init_stuff()

      starttime = os.time()
      speeding = true

      local i, chunkstop

      i = 1
      while (i < #t) do
        chunkstop = (chunk * (1 + math.floor(i / chunk)))

        repeat
          if (t[i] ~= "pause") then
            if (shortdir[t[i]]) then
              Queue(shortdir[t[i]])
            else
              Queue(t[i])
            end

            i = i + 1

          else
            abort_speedwalk()
          end

        until (i > chunkstop) or (i > #t) or (pause) or (abort)

        if (i > chunkstop) or (i > #t) then
          Note("-- speedwalk_manager_p1: waiting for where to happen --")
          waiting = true
        end

        if (not abort) then
          EnableTrigger("wait_for_where", true)
          Send("where")

          while (waiting) do
            wait.time(.5)
          end
        end
      end

      Note("-- speedwalk_manager_p1: done - elapsed time " .. os.time() - starttime .. "s --")
      init_stuff()

    else
      Note("-- speedwalk_manager_p1: you're already speedwalking! - use spd1 abort if you want to cancel it, then try again --")
    end
  end)
end


function where_detected()
  EnableTrigger("wait_for_where", false)
  waiting = false
end


function abort_speedwalk()
  if (speeding) then
    Note("-- speedwalk_manager_p1: speedwalk aborted - elapsed time " .. os.time() - starttime .. "s --")
    init_stuff()
    abort = true
  end
end


function obstacle_found()
  if (speeding) then
    Note("-- speedwalk_manager_p1 - found an obstacle in the speedwalk --")
    abort_speedwalk()
  end
end


]]>

</script>

</muclient>
