<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, August 26, 2020, 6:03 AM -->
<!-- MuClient version 5.06 -->

<!-- Plugin "log_renamer" generated by Plugin Wizard -->

<muclient>
<plugin
   name="log_renamer"
   author="Ruthgul"
   id="d83fdde9ed133fb0859936a6"
   language="Lua"
   purpose="renames logfiles (automatically or manually)"
   save_state="y"
   date_written="2020-08-26 06:01:58"
   date_modified="2020-08-26 11:59:06"
   requires="5.03"
   version="1.0"
   >

<description trim="y">

<![CDATA[

.---------------.
 | log_renamer |
`---------------'

At 00:00:00, it will automatically rename your logfile to yesterday's date
(if you're connected to the MUD and have logging enabled.)


** REQUIRES **
- You must be connected to the MUD.
- Logging options:
  + File > Global Preferences > Logging:
    [x] Append to log files
  + File > World Properties > General > Logging:
    [x] Log output
    [x] Log commands (recommended)
    [x] Write world name to log file (recommended)


Syntax:

* rename logfile  - renames your logile to 'now' <date>---<time>


Author: Ruthgul

]]>

</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>


<!--  Aliases  -->

<aliases>

  <alias
   enabled="y"
   match="^rename logfile$"
   regexp="y"
   script="rename_logfile_now"
  >
  </alias>


  <!-- only needed for tests -->
  <alias
   match="^rename logfile daychange$"
   regexp="y"
   script="rename_logfile_on_day_change"
  >
  </alias>


<!--  Plugin help  -->

  <alias
   enabled="y"
   match="^log\_renamer(|( |\:)help)$"
   regexp="y"
   script="OnHelp"
  >
  </alias>

</aliases>


<!--  Triggers  -->

<triggers>

  <trigger
   enabled="y"
   lines_to_match="2"
   keep_evaluating="y"
   match="^CONNECT OK\nWelcome to Materia Magica\!$"
   multi_line="y"
   regexp="y"
   sequence="100"
   script="on_mm_login"
  >
  </trigger>

</triggers>


<!--  Timers  -->

<timers>

  <timer
    enabled="y"
    at_time="y"
    active_closed="y"
    second="0.00"
    offset_second="0.00"
    script="rename_logfile_on_day_change"
  >
  </timer>

</timers>


<!--  Scripts  -->

<script>

<![CDATA[

function OnPluginInstall()
  show_help_hint()
end


function OnPluginDisconnect()
  FlushLog()
end


function OnHelp()
  ColourNote('silver', 'black', world.GetPluginInfo(world.GetPluginID(), 3))
  Note('')
  ColourNote('silver', 'black', '(this version: ' .. os.date('%c', GetPluginInfo(GetPluginID(), 14)) .. ')')
end


function on_mm_login()
  local logfile_full_path = GetInfo(51)
  if get_logfile_size(logfile_full_path) > 1500 then
    -- 965 is the minimum (on login)
    rename_logfile_now()
  end
end


function show_help_hint()
  Tell('-- ' .. GetPluginInfo(GetPluginID(), 1) .. ': type ')
  ColourTell('silver', 'black', GetPluginInfo(GetPluginID(), 1) .. ' help')
  Note(' to see info about this plugin --')
end


function rename_logfile_on_day_change()
  local yesterdate = os.date('%Y-%m-%d', os.time() - 24 * 60 * 60)
  rename_logfile(yesterdate .. '.txt')
end


function rename_logfile_now()
  local now_datetime = os.date('%Y-%m-%d---%H-%M-%S')
  rename_logfile(now_datetime .. '.txt')
end


function rename_logfile(new_name)
  if not IsConnected() then
    ColourNote('red', 'black', 'log_renamer ERROR: you must be connected to a MUD')
    OnPluginInstall()
    return
  end
  
  if not IsLogOpen() then
    ColourNote('red', 'black', 'log_renamer ERROR: logging is not enabled')
    OnPluginInstall()
    return
  end
  
  local logfile_full_path = GetInfo(51) -- current log filepath
  local logfile_dir = GetInfo(58) -- current log file directory
  local logfile_new_path = logfile_dir .. new_name -- new log filepath

  -- stop logging
  FlushLog()
  CloseLog()

  -- rename the old file
  local ok, msg
  ok, msg = os.rename(logfile_full_path, logfile_new_path)
  if ok then
    Note('log_renamer: renamed ' .. logfile_full_path .. ' to ' .. logfile_new_path)
  else
    ColourNote('red', 'black', 'log_renamer ERROR: ' .. msg)
  end

  -- restart logging
  OpenLog(logfile_full_path, true)
  -- add world + datetime info to the new logfile
  WriteLog(GetInfo(2) .. ' - ' .. os.date('%Y-%m-%d %X'))
  WriteLog('---\r\n\r\n')
end


function get_logfile_size(filepath)
  local f = assert(io.open(filepath, 'r'))
  local size = f:seek('end')  -- get file size
  f:close()
  return size
end


]]>

</script>


</muclient>
