<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Monday, September 29, 2014, 9:05 AM -->
<!-- MuClient version 4.94 -->

<!-- Plugin "meh_shortnames" generated by Plugin Wizard -->

<muclient>

<plugin
   name="meh_shortnames"
   author="Ruthgul"
   id="7ccd9d550eaeedb90ed0825d"
   language="Lua"
   purpose="replaces long names with short names, for mobs and items"
   save_state="y"
   date_written="2014-09-29 09:04:30"
   date_modified="2014-09-30 04:24:39"
   requires="4.73"
   version="1.0"
   >

<description trim="y">

<![CDATA[

.------------------.
 | meh_shortnames |
`------------------'

It replaces long names with short names, for mobs and items on the ground.


** ALPHA warning **

- Notice this plugin is EXPERIMENTAL and UNFINISHED. Use at your own risk.
- Also, it doesn't have a toggle yet, so disable it if it's bugging out.


** Known issues **

- I'm currently gagging (Invisible), (Pulsating), (Red Aura), and (Gold Aura), due to issues ANSI color codes and parenthesis.
- It probably has the same issue with other items with () as part of their long names, but I can't remember any other instances (it's working ok with detect magic.
- Certain restrung items apparently show twice?


** REQUIRES **

- MXP must be ON [ Client setting: Game, Configure, MXP / Pueblo... > Use MXP / Pueblo: On command (or Yes - always). ]


Author: Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Aliases  -->

<aliases>

<!--  Plugin help  -->
  <alias
   enabled="y"
   match="^meh\_shortnames(|( |\:)help)$"
   regexp="y"
   script="OnHelp"
  >
  </alias>

</aliases>



<!--  Scripts  -->

<script>

<![CDATA[

config = {
  subs = true
}



-----------------
-- plugin stuff
-----------------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID(), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID(), 1) .. " help")
  Note(" to see info about this plugin --")
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID(), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo(GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/meh_shortnames.xml",
  }
  return (table.concat(t, ";"))
end



--------
-- MXP
--------

old_s = nil


function OnPluginPacketReceived(s)
  -- if we haven't processed previous packets, concat them to the current one
  if (old_s) then
    s = old_s .. s
    old_s = nil
  end

  local n1, n2

  -- if the number of <get and </get in the current packet doesn't match,
  -- put the current packet on hold (until they do)
  _, n1 = string.gsub(s, "<get", "blah")
  _, n2 = string.gsub(s, "</get>", "blah")
  if (n1 ~= n2) then
    old_s = s
    return ""
  end

  -- if the number of <pers and </pers in the current packet doesn't match,
  -- put the current packet on hold (until they do)
  _, n1 = string.gsub(s, "<pers", "blah")
  _, n2 = string.gsub(s, "</pers>", "blah")
  if (n1 ~= n2) then
    old_s = s
    return ""
  end

  -- the number of <get and </get match, and so do the number of <pers and </pers
--  Note(s)

  if (GetInfo(104)) or (GetInfo(105)) then  -- MXP or Pueblo active
    local prefix
    local suffix = "</font>"

    s = strip_parenthesized_stuff(s)

    for short, long in string.gmatch(s, '<get name="(.-)" desc=".-">(.-)</get>\n') do
      prefix = get_color(long)

      s = string.gsub(s, escaped_str(long), prefix .. short .. suffix, 1)
    end

    for short, long in string.gmatch(s, '<pers name="(.-)" desc=".-">(.-)</pers>\n') do
      prefix = get_color(long)

      s = string.gsub(s, escaped_str(long), prefix .. short .. suffix, 1)
    end
--  Note(s)
  end

  return s  -- unchanged if not using MXP
end -- OnPluginPacketReceived


function get_color(s)
  local ansi2name = {
    [1] = "maroon",
    [2] = "green",
    [3] = "olive",
    [4] = "navy",
    [5] = "purple",
    [6] = "teal",
    [8] = "gray",
    [9] = "red",
    [11] = "yellow",
    [12] = "blue",
    [13] = "magenta",
    [14] = "cyan",
    [15] = "white",
  --	[10] = "lime",
  --	[7] - "silver",
  }

  s = string.match(s, "(.-) (.+)")

  local color, loc
  local old_loc = 0

  for code, name in pairs(ansi2name) do
    loc = string.find(escaped_str(s), "38;5;" .. code .. "m")
    if (loc) and (loc > old_loc) then
      color = name
      old_loc = loc
    end
  end

  loc = (string.find(escaped_str(s), "38;5;10m"))
  if (loc) and (loc > old_loc) then
    color = "lime"
  end

  if (not color) then
    --if (string.find(escaped_str(s), "38;5;7m")) then
    color = "silver"
  end

  color = '<font color="' .. color .. '">'

  return color
end


function strip_parenthesized_stuff(s)
  local subs = {
    "%[38;5;12m%(Invisible%) ",
    "%[38;5;11m%(Pulsating%) ",
    "%[38;5;11m%(Gold Aura%) ",
    "%[38;5;9m%(Red Aura%) ",
  }

  for i = 1, #subs do
    s = string.gsub(s, subs[i], "")
  end

  return s
end


function escaped_str(s)
  local subs = {
    ["%%"] = "%%%%",
--    ["%{"] = "%%{",
--    ["%}"] = "%%}",
    ["%["] = "%%[",
    ["%]"] = "%%]",
--    ["%("] = "%%(",
--    ["%)"] = "%%)",
--    ["%^"] = "%%^",
--    ["%."] = "%%.",
    ["%+"] = "%%+",
    ["%-"] = "%%-",
    ["%*"] = "%%*",
    ["%?"] = "%%?",
--    ["%|"] = "%%|",
--    ["%:"] = "%%:",
  }

  for key, val in pairs(subs) do
    s = string.gsub(s, key, val)
  end

  return s
end


]]>

</script>

</muclient>
