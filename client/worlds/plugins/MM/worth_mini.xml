<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, July 23, 2014, 3:26 PM -->
<!-- MuClient version 4.92 -->

<!-- Plugin "worth_mini" generated by Plugin Wizard -->

<muclient>

<plugin
   name="worth_mini"
   author="Ruthgul"
   id="616b8084d0f246d12d54588b"
   language="Lua"
   purpose="GMCP worth in a miniwindow"
   save_state="y"
   date_written="2014-07-23 15:25:57"
   date_modified="2014-11-06 10:46:27"
   requires="4.71"
   version="1.0"
   >

<description trim="y">

<![CDATA[

.--------------.
 | worth_mini |
`--------------'

Shows your GMCP worth (gold, pp, qp, bp, ru, tourms) in a miniwindow.


** REQUIRES **

- The file generic_miniwindow.lua must be placed in the MUSHclient/lua directory.
- MUSHclient must have write access to its folder.


Syntax:

* worth mini [on|off]  - shows/hides the worth miniwindow

* resync worth  - if your worth changed and it wasn't auto-detected, this will recapture it

* reset worth  - restores the default size


Author: Ruthgul
Miniwindow code adapted from Fiendish's / Enelya's chat capture plugins

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Aliases  -->

<aliases>

<!--  Plugin help  -->

  <alias
   match="^worth mini(| (?P&lt;state&gt;on|off))$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_worth("%&lt;state&gt;")
</send>
  </alias>

  <alias
   match="^resync worth$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>grab_worth()
</send>
  </alias>

  <alias
    enabled="y"
    regexp="y"
    match="^reset worth$"
    script="restore_defaults"
  >
  </alias>


<!--  Plugin help  -->

  <alias
   enabled="y"
   match="^worth(|\_mini)(|( |\:)help)$"
   regexp="y"
   script="OnHelp"
  >
  </alias>

</aliases>



<!--  Triggers  -->

<triggers>

<!-- on first prompt -->

  <trigger
   enabled="y"
   name="first_prompt"
   keep_evaluating="y"
   match="^(|[^ ]+(.*?))(\&lt;(.+)hp (.+)sp (.+)st\&gt;|\(.+\)|\&gt;) $"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>on_first_prompt()
</send>
  </trigger>

</triggers>



<!--  Scripts  -->

<script>

<![CDATA[

require "generic_miniwindow"
require "gmcphelper"


-----------------
-- plugin stuff
-----------------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID(), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID(), 1) .. " help")
  Note(" to see info about this plugin --")

  show_mini = ((GetVariable("show_mini") or "true") == "true")

  EnableTrigger("first_prompt", true)
end


function OnHelp()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID(), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo(GetPluginID(), 14)) .. ")")
end


function OnPluginConnect()
  EnableTrigger("first_prompt", true)
end


function OnPluginEnable()
  if (show_mini) then
    mini_show()
  end
end


function OnPluginClose()
  if (show_mini) then
    if GetPluginInfo(GetPluginID(), 17) then -- plugin is enabled
      mini_hide()
    end
  end
end


function OnPluginDisable()
  if (show_mini) then
    mini_hide()
  end
end


function OnPluginSaveState()
  if (show_mini) then
    SetVariable("enabled", tostring(GetPluginInfo(GetPluginID(), 17)))
    save_status()
  end
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/worth_mini.xml",
  }
  return (table.concat(t, ";"))
end


function plugin_update_aux_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/generic_miniwindow.lua,MUSH/lua",
  }
  return (table.concat(t, ";"))
end



---------------
-- init stuff
---------------

function on_first_prompt()
  EnableTrigger("first_prompt", false)

  grab_worth()

  worth_start()
end



------------
-- toggles
------------

function toggle_worth(state)
  if (state == "") then
    show_mini = not show_mini

  elseif (state == "on") then
    show_mini = true

  elseif (state == "off") then
    show_mini = false
  end

  if (show_mini) then
    SetVariable("show_mini", "true")
    mini_show()

  else
    SetVariable("show_mini", "false")
    mini_hide()
  end
end



----------------------
-- handle broadcasts
----------------------

function OnPluginBroadcast(msg, id, pname, text)
  if (id == "f67c4339ed0591a5b010d05b") -- GMCP handler
  and (pname == "MM_GMCP_handler") then
    if (text == "char.worth") then
      get_gmcp_char_worth()
      handle_my_worth()
    end
  end
end



----------------
-- GMCP stuff
----------------

function get_gmcp_char_worth()
  local res, gmcparg = CallPlugin("f67c4339ed0591a5b010d05b", "gmcpval", "char.worth")
  luastmt = "gmcpdata = " .. gmcparg

  assert(loadstring(luastmt or ""))()
end



----------
-- worth
----------

function grab_worth()
  -- only requesting status once every 5 minutes, max
  local frequency = 5 * 60

  if (not latest_worth) or ((os.time() - latest_worth) > frequency) then
--    Note("-- worth_mini: sendgmcp char.worth --")
    Execute("sendgmcp char.worth") -- request worth
    latest_worth = os.time()
  end
end


worth_types = { "gold", "bank", "pracs", "qp", "bp", "ru", "gems" }


function handle_my_worth()
  latest_worth = os.time()

  worth = {}

  for i = 1, #worth_types do
    worth[worth_types[i]] = gmcpval(worth_types[i]) or 0
  end

  if (not prev_worth) then
    prev_worth = {}
  end

  local changed = false
  for i = 1, #worth_types do
    if (prev_worth[worth_types[i]] ~= worth[worth_types[i]]) then
      changed = true
      break
    end
  end

  if (not prev_worth["gold"])
  or (changed) then
    worth_redraw()

    for i = 1, #worth_types do
      prev_worth[worth_types[i]] = worth[worth_types[i]]
    end
  end
end



---------------------
-- miniwindow stuff
---------------------

function worth_start()
  do_install_miniwindow("worth", show_mini, false)
end


function worth_redraw()
  if (show_mini) then
    clear_mini()
    do_show_worth()
  end
end


worth_renames = {
  ["pracs"] = "pp",
  ["gems"] = "tourms",
}


function do_show_worth()
  local label, txt

  for i = 1, #worth_types do
    label = worth_renames[worth_types[i]] or worth_types[i]

    txt = label .. ":" .. string.rep(" ", string.len("tourms: ") - string.len(label)) .. string.format("%12s", format_thousands(worth[worth_types[i]] or "?"))

    add_to_mini("silver", "black", txt)
    add_to_mini("silver", "black", "\r\n")
  end
end


function format_thousands(num)
	num = tonumber(num)

  local res = "?"

  if (num) then
    local s = string.format("%d", math.floor(num))
    local pos = string.len(s) % 3

    if pos == 0 then
      pos = 3
    end

    res = string.sub(s, 1, pos) .. string.gsub(string.sub(s, pos + 1), "(...)", ",%1")
  end

  return res
end


function add_to_mini(fgcol, bgcol, txt)
  if (show_mini) then
    if (not styles) then
      styles = {}
    end

    if (txt == "\r\n") then
      log_to_mini("", "", "", styles)
      styles = {}

    else
      styles[#styles + 1] = {
        text = txt,
        textcolour = ColourNameToRGB(fgcol),
        backcolour = ColourNameToRGB(bgcol),
        length = string.len(txt),
        style = 0,
      }
    end
  end
end


]]>

</script>

</muclient>
