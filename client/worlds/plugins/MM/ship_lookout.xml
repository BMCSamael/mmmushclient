<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, September 30, 2011, 8:13 PM -->
<!-- MuClient version 4.73 -->

<!-- Plugin "ship_lookout" generated by Plugin Wizard -->

<muclient>

<plugin
   name="ship_lookout"
   author="Ruthgul"
   id="dc22833520922eacc933b2ac"
   language="Lua"
   purpose="sorts lookout output, plots the results"
   save_state="y"
   date_written="2011-10-05 04:36:51"
   date_modified="2014-11-06 10:15:23"
   requires="4.71"
   version="1.5"
   >

<description trim="y">

<![CDATA[

.----------------.
 | ship_lookout |
`----------------'

Sorts ship lookout output by direction and distance. If imap is installed, it plots the results.


*** REQUIRES ***

* Client setting: Game > Configure > Output > [x] Convert IAC EOR/GA to new line (must be checked)
* To plot results on IMap, you must have IMap installed and enabled - which in turn requires the GMCP Handler.


Syntax:

* ship_lookout sortlist [on|off] - toggles text output recolor & sorting on/off (on by default)

* ship_lookout sortby [dirdist|distdir] - chooses text output sorting criterium
  (where dirdist = 1st by direction, 2nd by distance; distdir = 1st by distance, 2nd by direction - default is dirdist)


Author: Ruthgul

Latest version:
http://github.com/MateriaMagicaLLC/mm-mushclient-scripts

]]>

</description>

</plugin>



<!--  Aliases  -->

<aliases>
  <alias
   name="ship_lookout_sortby"
   match="^ship\_lookout sortby (?P&lt;sortby&gt;(distdir|dirdist))$"
   enabled="y"
   group="script-ship_lookout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>sort_lookout("%sortby")
</send>
  </alias>

  <alias
   name="ship_lookout_sort_list"
   match="^ship\_lookout[ ]+sortlist(|[ ]+(?P&lt;state&gt;(on|off)))$"
   enabled="y"
   group="script-ship_lookout"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>toggle_sort_list("%&lt;state&gt;")
</send>
  </alias>
</aliases>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="^ship_lookout(|\:|[ ]+help)$"
   regexp="y"
   enabled="y"
  >
  </alias>
</aliases>



<!--  Triggers  -->

<triggers>

  <trigger
   enabled="y"
   group="script-ship_lookout"
   keep_evaluating="y"
   match="You climb up to the crow's nest of * and look in every direction."
   send_to="12"
   sequence="100"
  >
  <send>start_lookout()
</send>
  </trigger>

  <trigger
   group="script-ship_lookout"
   keep_evaluating="y"
   match="^[ ]+(?P&lt;num&gt;[0-9]+)\) ((?P&lt;target&gt;\&gt;)|)(?P&lt;dist&gt;(Right here|Close by|Not far off|A brief (swim|walk) away|Rather far off|In the distance|Almost out of sight)) to the (?P&lt;dir&gt;(north|northeast|east|southeast|south|southwest|west|northwest))\, you see (the (?P&lt;desc&gt;.+?) \[|a )(?P&lt;ship&gt;(lifeboat|skiff|coaster|caravel|drakkar|corsair|dromond|galleon|super dreadnought|dreadnought|junk))(\]|)(\,|)(?P&lt;flag&gt;( flying( a flag bearing the Jolly Roger of (?P&lt;pirate&gt;.+?)|( the flag of| a flag (bearing|picturing)|) (?P&lt;flagt&gt;.+?)))|)\.((?P&lt;combat&gt; \[COMBAT\])|)( \(Bearing (?P&lt;mdir&gt;(North|Northeast|East|Southeast|South|Southwest|West|Northwest))\)|)$"
   name="lookout"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>lookout_line("%&lt;num&gt;", "%&lt;target&gt;", "%&lt;dist&gt;", "%&lt;dir&gt;", "%&lt;desc&gt;", "%&lt;ship&gt;", "%&lt;flag&gt;", "%&lt;pirate&gt;", "%&lt;flagt&gt;", "%&lt;combat&gt;", "%&lt;mdir&gt;")
</send>
  </trigger>

  <trigger
   group="script-ship_lookout"
   keep_evaluating="y"
   match="^$"
   name="endlookout"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>end_lookout()
</send>
  </trigger>

  <trigger
   group="script-ship_lookout"
   match="^(.*?)(|\[(?P&lt;hposx&gt;[0-9]+)\, (?P&lt;hposy&gt;[0-9]+)\])(|\[SPK\])\([0-9]+hull (.+?)dir (ANCHOR|STOP|SLOW|HALF|FULL|FLANK) (.+?)wind(|( [0-9]+\%shld|)(| (?P&lt;obposx&gt;[0-9]+)\, (?P&lt;obposy&gt;[0-9]+)))\) $"
   name="lookout_imap"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>plot_lookout("%&lt;hposx&gt;", "%&lt;hposy&gt;", "%&lt;obposx&gt;", "%&lt;obposy&gt;")
</send>
  </trigger>
</triggers>



<!--  Scripts  -->

<script>

<![CDATA[

require "gmcphelper"


-----------------
-- plugin stuff
-----------------

function OnPluginInstall()
  Tell("-- " .. GetPluginInfo(GetPluginID (), 1) .. ": type ")
  ColourTell("silver", "black", GetPluginInfo(GetPluginID (), 1) .. " help")
  Note(" to see info about this plugin --")

  load_config()
end


function OnHelp ()
  ColourNote("silver", "black", world.GetPluginInfo(world.GetPluginID (), 3))
  Note("")
  ColourNote("silver", "black", "(this version: " .. os.date("%c", GetPluginInfo (GetPluginID(), 14)) .. ")")
end


function plugin_update_url()
  local t = {
    "https://raw.githubusercontent.com/MateriaMagicaLLC/mm-mushclient-scripts/master/src/ship_lookout.xml",
  }
  return (table.concat(t, ";"))
end



---------------
-- GMCP stuff
---------------

function OnPluginBroadcast(msg, id, name, text)
  if (id =="f67c4339ed0591a5b010d05b") then -- GMCP message
    if (text == "room.info") then -- room.info
      get_gmcp_room()
    end
  end
end


function get_gmcp_room()
  local res, gmcparg = CallPlugin("f67c4339ed0591a5b010d05b", "gmcpval", "room.info")
  luastmt = "gmcpdata = " .. gmcparg

  assert(loadstring(luastmt or ""))()
end



------------------
-- lookout stuff
------------------

function start_lookout()
  require "wait"
  wait.make (function ()
    ArrayDelete("ashlookout")
    ArrayCreate("ashlookout")

    if (not sorted) then
      SetTriggerOption("lookout", "omit_from_output", "n")
      SetTriggerOption("lookout", "send_to", "12") -- send to script

    else -- default is true
      SetTriggerOption("lookout", "omit_from_output", "y")
      SetTriggerOption("lookout", "send_to", "14") -- send to script after omit
      EnableTrigger("endlookout", true)
    end

    EnableTrigger("lookout", true)

    -- check if iMap is installed + started
    local result, imap_started = CallPlugin("adc3a873d4e47348da7cb426", "IsStarted")
    if (result == 0) then -- it is installed
      if (imap_started) then
        EnableTrigger("lookout_imap", true) -- enable the trigger that plots ship lookout
      end
    end

    wait.time(2)
    EnableTrigger("lookout", false)
  end)
end


function lookout_line(num, target, dist, dir, desc, ship, flag, pirate, flagt, combat, mdir)
  local lookout = {
    ["right here"] = "1",
    ["close by"] = "2",
    ["not far off"] = "3",
    ["a brief swim away"] = "4",
    ["rather far off"] = "5",
    ["in the distance"] = "6",
    ["almost out of sight"] = "7",
  }

  local dist = string.lower(dist)
  local distn = lookout[dist]

  local shortdir = {
    ["north"] = "N",
    ["northeast"] = "NE",
    ["east"] = "E",
    ["southeast"] = "SE",
    ["south"] = "S",
    ["southwest"] = "SW",
    ["west"] = "W",
    ["northwest"] = "NW",
  }

  local dir = string.lower(dir)
  local dir = shortdir[dir]

  local dir2num = {
    ["N"] = "1",
    ["NE"] = "2",
    ["E"] = "3",
    ["SE"] = "4",
    ["S"] = "5",
    ["SW"] = "6",
    ["W"] = "7",
    ["NW"] = "8",
  }

  local dirn = dir2num[dir]


  local bearing = string.lower(mdir)
  if (bearing ~= "") then
    bearing = shortdir[bearing]
  end

  local shiptype = ship

  local shipname = desc
  if (shipname ~= "") then
    local firstletter = string.find(shipname, "%S", 0, false)
    if (firstletter > 1) then
      -- remove leading blanks
      shipname = string.sub(shipname, firstletter, string.len(shipname))
    end

	local aux = string.find(shipname, " [super", 0, true)
	if (aux ~= nil) then
      if ((aux + string.len(" [super") - 1) == string.len(shipname)) then
        shipname = string.gsub(shipname, " %[super", "")
        shiptype = "super " .. shiptype
      end
    end
  end

  local ships = {
    ["lifeboat"] = "0",
    ["skiff"] = "1",
    ["coaster"] = "2",
    ["caravel"] = "3", -- from here up, won't drop loot if you're on an SD
    ["drakkar"] = "4", -- they only drop loot if they aggro you
    ["corsair"] = "5", -- from here down, will drop loot always
    ["dromond"] = "6",
    ["galleon"] = "7",
    ["dreadnought"] = "8",
    ["junk"] = "9",
    ["super dreadnought"] = "A",
  }

  local shiptypen = ships[shiptype]

  local sailor, shipflag
  if (string.find(flag, "flag") ~= nil) then
    if (pirate ~= "") then
      sailor = "pirate"
      shipflag = pirate
    else
      sailor = "player"
      shipflag = flagt
    end
  else
    shipflag = ""
    if ((num == "12") or (num == "13") or (num == "137")) then
      sailor = "system"
    else
      sailor = "player"
    end
  end

  local in_combat
  if (combat ~= "") then
    in_combat = "yes"
  else
    in_combat = ""
  end

  local is_target = ""
  if (target ~= "") then
    is_target = "yes"
  end

  local lnum = string.format("%04s", num)

  local mainkey
  if (sortby == "distdir") then
    mainkey = distn .. dirn .. lnum
  else -- default is dirdist
    mainkey = dirn .. distn .. lnum
  end

  --Note("mainkey: " .. mainkey)
  local t = {}
  t[1] = distn
  t[2] = dist
  t[3] = dir
  t[4] = num
  t[5] = shiptypen
  t[6] = shiptype
  t[7] = sailor
  t[8] = shipflag
  t[9] = bearing
  t[10] = in_combat
  t[11] = shipname
  t[12] = is_target
  tconcat = table.concat(t, ",")
  --Note(tconcat)
  ArraySet("ashlookout", mainkey, tconcat)
end


function end_lookout()
  local keys = ArrayListKeys("ashlookout")
  if (keys ~= nil) then
    ColourNote("gray", "black", " num  distance      dir  ship      other")

    local key, val, oneship, t
    for key, val in pairs (keys) do
    oneship = ArrayGet("ashlookout", val)
    t = utils.split(oneship, ",")

    local colors = {
      ["pirate"] = "limegreen",
      ["player"] = "red",
      ["system"] = "blue",
    }
    local color = colors[t[7]]

    local shipnum = string.format("%+4.4s", t[4])

    local engaged = "  "
    if (t[12] ~= "") then
      engaged = "* "
    end

    local distn = t[1]
    local dist = string.format("%-9.9s", t[2])
    local dir = string.format("%-2s", t[3])
    local shiptype = string.format("%-5.5s", t[6])
    local shiptypen = t[5]

    ColourTell("lightgray", "black", shipnum,
               "yellow", "black", engaged,
               "lightgray", "black", distn,
               "gray", "black", "[",
               color, "black", dist,
               "gray", "black", "]  ",
               "lightgray", "black", dir .. "   ",
               "lightgray", "black", shiptypen,
               "gray", "black", "[",
               color, "black", shiptype,
               "gray", "black", "] ")

    local shipname = t[11]
    if (shipname ~= "") then
      ColourTell("gray", "black", " name: ",
                 color, "black", shipname)
    end

    local flag = t[8]
    if (flag ~= "") then
      ColourTell("gray", "black", " flag: ",
                 color, "black", flag)
    end

    local bearing = t[9]
    if (bearing ~= "") then
      ColourTell("gray", "black", " bearing: ",
                 "lightgray", "black", bearing)
    end

    local combat = t[10]
    if (combat ~= "") then
      ColourTell("gray", "black", " [",
                 "yellow", "black", "combat",
                 "gray", "black", "]")
    end

    Note("") -- line break
    end
  end

  Note("") -- line break
  EnableTrigger("endlookout", false)
end


function plot_lookout(hposx, hposy, obposx, obposy)
  require "wait"

  wait.make (function ()
    wait.time(.1)

    local posx, posy -- coords in Game
    if (obposx ~= "") then -- ship has an onboard sextant
      posx = tonumber(obposx)
      posy = tonumber(obposy)

    elseif (hposx ~= "") then -- holding a sextant
      posx = tonumber(hposx)
      posy = tonumber(hposy)

    else -- no sextant, trying to grab coords from GMCP
      posx = gmcpval("coord.x")
      posy = gmcpval("coord.y")

      if (posx) and (posy) then -- GMCP plugin present
        posx = tonumber(posx)
        posy = tonumber(posy)
      end
    end

    if (posx) and (posy) then -- we have coords
      local keys = ArrayListKeys("ashlookout")
      if (keys ~= nil) then
        local key, val, oneship, t
        for key, val in pairs (keys) do
          oneship = ArrayGet("ashlookout", val)
          t = utils.split(oneship, ",")

          local colors = {
            ["pirate"] = "lime",
            ["player"] = "red",
            ["system"] = "white",
          }
          local color = colors[t[7]]

          local dir = t[3]
          local distn = t[1]
          local shipn = t[5]

          local distances = {
            ["1"] = "1",     -- 0 .. 2
            ["2"] = "7",     -- 3 .. 10
            ["3"] = "18",    -- 11 .. 25
            ["4"] = "33",    -- 26 .. 40
            ["5"] = "51",    -- 41 .. 60
            ["6"] = "68",    -- 61 .. 75
            ["7"] = "87",    -- ?
          }

          local distancesdiag = {
            ["1"] = "1",     -- 0 .. 2
            ["2"] = "5",     -- 3 .. 7
            ["3"] = "13",    -- 8 .. 18
            ["4"] = "24",    -- 19 .. 28
            ["5"] = "36",    -- 29 .. 43
            ["6"] = "49",    -- 44 .. 53
            ["7"] = "61",    -- ?
          }

          local x, y
          if (dir == "N") then
            x = posx
            y = posy - distances[distn]
          elseif (dir == "NE") then
            x = posx + distancesdiag[distn]
            y = posy - distancesdiag[distn]
          elseif (dir == "E") then
            x = posx + distances[distn]
            y = posy
          elseif (dir == "SE") then
            x = posx + distancesdiag[distn]
            y = posy + distancesdiag[distn]
          elseif (dir == "S") then
            x = posx
            y = posy + distances[distn]
          elseif (dir == "SW") then
            x = posx - distancesdiag[distn]
            y = posy + distancesdiag[distn]
          elseif (dir == "W") then
            x = posx - distances[distn]
            y = posy
          elseif (dir == "NW") then
            x = posx - distancesdiag[distn]
            y = posy - distancesdiag[distn]
          end

          -- these can only happen in Alyria or Underground
          if (x < 0) then
            x = 2299 + x
          elseif (x > 2299) then
            x = x - 2299
          end
          if (y < 0) then
            y = 1499 + y
          elseif (y > 1499) then
            y = y - 1499
          end

          Execute("imap showtext " .. x .. ", " .. y .. ", " .. color .. ", " .. shipn)
        end
      end
    end
  end)
  EnableTrigger("lookout_imap", false)
end



-----------------
-- config stuff
-----------------

function sort_lookout(state)
  sortby = state

  save_config()

  if (sortby == "dirdist") then
    Note("-- Ship_Lookout: will now sort output by direction, then by distance --")
  else
    Note("-- Ship_Lookout: will now sort output by distance, then by direction --")
  end
end


function toggle_sort_list(state)
  if (state == "") then
    sorted = not sorted

  elseif (state == "on") then
    sorted = true

  elseif (state == "off") then
    sorted = false
  end

  save_config()

  if (not sorted) then
    Note("-- Ship_Lookout: text output will NOT be recolored/sorted --")

  else -- default is true
    Note("-- Ship_Lookout: text output will be recolored/sorted --")
  end
end


function load_config()
  sorted = ((GetVariable("sorted") or "true") == "true")

  sortby = GetVariable("sortby") or "dirdist"
end


function save_config()
  SetVariable("sorted", tostring(sorted))
  SetVariable("sortby", sortby)

  SaveState()
end


]]>

</script>

</muclient>
